{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js\";\n// Контейнер для панели коллекции папок\nimport React, { Component } from 'react';\nimport './Menu.scss';\nimport AddTask from '../../components/UI/AddTask/AddTask';\nimport Folder from '../../components/UI/Folder/Folder';\nimport Axios from '../../axios/axios-folders';\nexport default class Menu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 1000;\n    this.state = {\n      folders: []\n    };\n\n    this.addFolder = text => {\n      const newFolder = this.createFolder(text);\n      Axios.post(`/folders.json`, newFolder).then(function (res) {\n        const folderKey = Object.values(res.data)[0];\n        newFolder.key = folderKey;\n      }).catch(function (e) {\n        console.log(e);\n      });\n      this.setState(({\n        folders\n      }) => {\n        const newArr = [...folders, newFolder];\n        return {\n          folders: newArr\n        };\n      });\n      this.test();\n    };\n\n    this.test = async () => {\n      await Axios.patch(`/tedasdsa.json`, 'Hello');\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        folders\n      }) => {\n        const idx = folders.findIndex(el => el.id === id);\n        const newArray = [...folders.slice(0, idx), ...folders.slice(idx + 1)];\n        return {\n          folders: newArray\n        };\n      });\n    };\n\n    this.onSelectFolder = key => {\n      console.log(key);\n    };\n  }\n\n  createFolder(name) {\n    return {\n      name,\n      id: this.maxId++\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await Axios.get('/folders.json');\n      const folders = [];\n      Object.values(response.data).forEach(folder => {\n        folders.push(folder);\n      });\n      this.setState({\n        folders\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, this.state.folders.map(item => {\n      return /*#__PURE__*/React.createElement(Folder, {\n        title: item.name,\n        id: item.id,\n        key: item.key,\n        onDelete: this.deleteItem,\n        onSelectFolder: this.onSelectFolder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addTask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AddTask, {\n      text: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\",\n      onItemAdded: this.addFolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js"],"names":["React","Component","AddTask","Folder","Axios","Menu","maxId","state","folders","addFolder","text","newFolder","createFolder","post","then","res","folderKey","Object","values","data","key","catch","e","console","log","setState","newArr","test","patch","deleteItem","id","idx","findIndex","el","newArray","slice","onSelectFolder","name","componentDidMount","response","get","forEach","folder","push","render","map","item"],"mappings":"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","sourcesContent":["// Контейнер для панели коллекции папок\nimport React, {Component} from 'react'\nimport './Menu.scss'\nimport AddTask from '../../components/UI/AddTask/AddTask'\nimport Folder from '../../components/UI/Folder/Folder'\nimport Axios from '../../axios/axios-folders'\n\nexport default class Menu extends Component {\n    maxId = 1000\n\n\tstate = {\n\t\tfolders: [\n    ]\n\t}\n\n\tcreateFolder(name) {\n        return {\n            name,\n            id: this.maxId++,\n        }\n    }\n\n    addFolder = (text) => {\n        const newFolder = this.createFolder(text);\n        Axios.post(`/folders.json`, newFolder)\n        .then(function (res) {\n          const folderKey = ((Object.values(res.data))[0])\n          newFolder.key = folderKey\n        })\n        .catch(function (e) {\n          console.log(e)\n        })\n        this.setState(({ folders }) => {\n            const newArr = [\n                ...folders,\n                newFolder\n            ];\n            return {\n                folders: newArr\n            }\n        })\n        this.test()\n    };\n\n    test = async () => {\n      await Axios.patch(`/tedasdsa.json`, 'Hello')\n    }\n\n    deleteItem = (id) => {\n        this.setState(({ folders }) => {\n            const idx = folders.findIndex((el) => el.id === id);\n            const newArray = [\n                ...folders.slice(0, idx),\n                ...folders.slice(idx + 1)\n            ];\n            return {\n                folders: newArray\n            }\n        })\n    };\n\n    onSelectFolder = (key) => {\n      console.log(key)\n    }\n\n    async componentDidMount() {\n      try {\n        const response = await Axios.get('/folders.json')\n        const folders = []\n\n        Object.values(response.data).forEach((folder) => {\n          folders.push(folder)\n        })\n    \n        this.setState({\n          folders\n        })\n    \n      } catch (e) {\n        console.log(e)\n      }\n    }\n  \n\n    render() {\n        return (\n            <div className='Menu'>\n                <ul className=\"list-group\">\n                    {\n                        this.state.folders.map((item) => {\n                            return(\n                                <Folder \n                                    title={item.name} \n                                    id={item.id} \n                                    key={item.key}          \n                                    onDelete={this.deleteItem}\n                                    onSelectFolder={this.onSelectFolder}\n                                />\n                            )\n                        })\n                    }\n                    <div className='addTask'>\n                        <AddTask \n                            text='Новая папка' \n                            onItemAdded={this.addFolder}\n                        />\n                    </div>\n                </ul>\n            </div>\n        )    \n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}