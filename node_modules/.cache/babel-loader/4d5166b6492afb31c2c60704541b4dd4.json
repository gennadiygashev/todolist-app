{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js\";\n// Контейнер для панели коллекции папок\nimport React, { Component } from 'react';\nimport './Menu.scss';\nimport AddTask from '../../components/UI/AddTask/AddTask';\nimport Folder from '../../components/UI/Folder/Folder';\nimport Axios from '../../axios/axios-folders';\nexport default class Menu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      folders: []\n    };\n\n    this.deleteFolder = id => {\n      this.setState(({\n        folders\n      }) => {\n        const idx = folders.findIndex(el => el.id === id);\n        const newArray = [...folders.slice(0, idx), ...folders.slice(idx + 1)];\n        return {\n          folders: newArray\n        };\n      });\n    };\n\n    this.updateState = async () => {\n      try {\n        console.log(`componentDidMount: ${this.state}`);\n        const responseFolders = await Axios.get('/folders.json');\n        const folders = [];\n        Object.values(responseFolders.data).forEach(folder => {\n          folders.push(folder);\n        });\n        this.setState({\n          folders\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.addFolder = text => {\n      console.log(`Add Folder: ${this.state}`);\n      const newFolder = this.createFolder(text);\n      Axios.post(`/folders.json`, newFolder).then(function (res) {\n        const folderKey = Object.values(res.data)[0];\n        newFolder.key = folderKey;\n        Axios.patch(`/folders/${folderKey}.json`, {\n          'key': folderKey\n        });\n      }).then(function () {\n        this.setState(({\n          folders\n        }) => {\n          const newArr = [...folders, newFolder];\n          return {\n            folders: newArr\n          };\n        });\n      });\n    };\n  }\n\n  //\n  createFolder(name) {\n    return {\n      name\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      console.log(`componentDidMount: ${this.state}`);\n      const responseFolders = await Axios.get('/folders.json');\n      const folders = [];\n      Object.values(responseFolders.data).forEach(folder => {\n        folders.push(folder);\n      });\n      this.setState({\n        folders\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, this.state.folders.map(item => {\n      return /*#__PURE__*/React.createElement(Folder, {\n        title: item.name,\n        keyx: item.key,\n        key: item.key,\n        onDelete: this.deleteItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addTask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AddTask, {\n      text: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\",\n      onItemAdded: this.addFolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js"],"names":["React","Component","AddTask","Folder","Axios","Menu","state","folders","deleteFolder","id","setState","idx","findIndex","el","newArray","slice","updateState","console","log","responseFolders","get","Object","values","data","forEach","folder","push","e","addFolder","text","newFolder","createFolder","post","then","res","folderKey","key","patch","newArr","name","componentDidMount","render","map","item","deleteItem"],"mappings":"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","sourcesContent":["// Контейнер для панели коллекции папок\nimport React, {Component} from 'react'\nimport './Menu.scss'\nimport AddTask from '../../components/UI/AddTask/AddTask'\nimport Folder from '../../components/UI/Folder/Folder'\nimport Axios from '../../axios/axios-folders'\n\nexport default class Menu extends Component {\n  state = {\n    folders: [],\n  }\n\n  //\n  \n  createFolder(name) {\n    return {\n      name\n    }\n  }\n\n  deleteFolder = (id) => {\n    this.setState(({ folders }) => {\n      const idx = folders.findIndex((el) => el.id === id);\n      const newArray = [\n        ...folders.slice(0, idx),\n        ...folders.slice(idx + 1)\n      ]\n      return {\n        folders: newArray\n      }\n    })\n  }\n\n  updateState = async () => {\n    try {      \n      console.log(`componentDidMount: ${this.state}`)\n      const responseFolders = await Axios.get('/folders.json')\n      const folders = []\n      Object.values(responseFolders.data).forEach((folder) => {\n        folders.push(folder)\n      })  \n      this.setState({\n        folders\n      }) \n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  addFolder = (text) => {\n    console.log(`Add Folder: ${this.state}`)\n    const newFolder = this.createFolder(text);\n    Axios.post(`/folders.json`, newFolder)\n    .then(function (res) {\n      const folderKey = ((Object.values(res.data))[0])\n      newFolder.key = folderKey\n      Axios.patch(`/folders/${folderKey}.json`, {'key': folderKey})\n    })\n    .then(function() {\n      this.setState(({ folders }) => {\n        const newArr = [\n          ...folders,\n          newFolder\n        ];\n        return {\n          folders: newArr\n        }\n      })  \n    })\n  }\n\n  async componentDidMount() {\n    try {      \n      console.log(`componentDidMount: ${this.state}`)\n      const responseFolders = await Axios.get('/folders.json')\n      const folders = []\n      Object.values(responseFolders.data).forEach((folder) => {\n        folders.push(folder)\n      })  \n      this.setState({\n        folders\n      }) \n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <div className='Menu'>\n        <ul className=\"list-group\">\n          {\n            this.state.folders.map((item) => {\n              return(\n                <Folder \n                  title={item.name} \n                  keyx={item.key}  \n                  key={item.key}        \n                  onDelete={this.deleteItem}\n                />\n              )\n            })\n          }\n          <div className='addTask'>\n            <AddTask \n              text='Новая папка' \n              onItemAdded={this.addFolder}\n            />\n          </div>\n        </ul>\n      </div>\n    )    \n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}