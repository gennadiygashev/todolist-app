{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.scss';\nimport Menu from './containers/Menu/Menu.js';\nimport Main from './containers/Main/Main.js';\nimport Axios from './axios/axios-folders';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      folders: [],\n      activeFolderKey: null\n    };\n\n    this.addFolder = text => {\n      const newFolder = this.createFolder(text);\n      Axios.post(`/folders.json`, newFolder).then(function (res) {\n        const folderKey = Object.values(res.data)[0];\n        newFolder.key = folderKey;\n        Axios.patch(`/folders/${folderKey}.json`, {\n          'key': folderKey\n        });\n      });\n      this.setState(({\n        folders\n      }) => {\n        const newArr = [...folders, newFolder];\n        return {\n          folders: newArr\n        };\n      });\n    };\n\n    this.deleteFolder = id => {\n      this.setState(({\n        folders\n      }) => {\n        const idx = folders.findIndex(el => el.id === id);\n        const newArray = [...folders.slice(0, idx), ...folders.slice(idx + 1)];\n        return {\n          folders: newArray\n        };\n      });\n    };\n\n    this.onSelectFolder = async key => {\n      this.setState({\n        activeFolderKey: key\n      });\n    };\n  }\n\n  //\n  createFolder(name) {\n    return {\n      name\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const responseFolders = await Axios.get('/folders.json');\n      const folders = [];\n      Object.values(responseFolders.data).forEach(folder => {\n        folders.push(folder);\n      });\n      this.setState({\n        folders\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      folders: this.state.folders,\n      addFolder: this.addFolder,\n      deleteFolder: this.deleteFolder,\n      onSelectFolder: this.onSelectFolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/:id\",\n      render: ({\n        match,\n        location,\n        history\n      }) => /*#__PURE__*/React.createElement(Main, {\n        folderId: match.params.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 74\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Menu","Main","Axios","App","state","folders","activeFolderKey","addFolder","text","newFolder","createFolder","post","then","res","folderKey","Object","values","data","key","patch","setState","newArr","deleteFolder","id","idx","findIndex","el","newArray","slice","onSelectFolder","name","componentDidMount","responseFolders","get","forEach","folder","push","e","console","log","render","match","location","history","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.scss';\nimport Menu from './containers/Menu/Menu.js'\nimport Main from './containers/Main/Main.js'\nimport Axios from './axios/axios-folders'\n\n\nexport default class App extends Component { \n  state = {\n    folders: [],\n    activeFolderKey: null\n  }\n\n  //\n  \n  createFolder(name) {\n    return {\n      name\n    }\n  }\n\n  addFolder = (text) => {\n    const newFolder = this.createFolder(text);\n    Axios.post(`/folders.json`, newFolder)\n    .then(function (res) {\n      const folderKey = ((Object.values(res.data))[0])\n      newFolder.key = folderKey\n      Axios.patch(`/folders/${folderKey}.json`, {'key': folderKey})\n    })\n    this.setState(({ folders }) => {\n      const newArr = [\n        ...folders,\n        newFolder\n      ];\n      return {\n        folders: newArr\n      }\n    })\n  }\n\n  deleteFolder = (id) => {\n    this.setState(({ folders }) => {\n      const idx = folders.findIndex((el) => el.id === id);\n      const newArray = [\n        ...folders.slice(0, idx),\n        ...folders.slice(idx + 1)\n      ]\n      return {\n        folders: newArray\n      }\n    })\n  }\n\n  onSelectFolder = async (key) => {\n    this.setState({\n      activeFolderKey: key\n    })\n  }\n  \n  async componentDidMount() {\n    try {      \n      const responseFolders = await Axios.get('/folders.json')\n      const folders = []\n      Object.values(responseFolders.data).forEach((folder) => {\n        folders.push(folder)\n      })  \n      this.setState({\n        folders\n      }) \n\n    } catch (e) {\n      console.log(e)\n    }\n  }\n   \n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n        <Router>\n          <div className='row'>\n            <div className='col-2'>\n              <Menu \n                folders={this.state.folders} \n                addFolder={this.addFolder}\n                deleteFolder={this.deleteFolder}\n                onSelectFolder={this.onSelectFolder}\n              />\n            </div>\n            <div className='col-10'>\n              <Route path='/:id' render={({match, location, history}) => <Main folderId={match.params.id} />} />\n            </div>\n          </div>\n        </Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}