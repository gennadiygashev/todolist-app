{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Main/Main.js\";\n// Контейнер для отображения элементов карточек с задачами\nimport React, { Component } from 'react';\nimport './Main.scss';\nimport Card from '../../components/Card/Card';\nimport AddCard from '../../components/UI/AddCard/AddCard';\nimport Axios from '../../axios/axios-folders';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: []\n    };\n\n    this.addCard = () => {\n      const newCard = this.createCard();\n      Axios.post(`/folders/${this.props.activeFolderKey}/cards.json`, newCard).then(function (res) {\n        const cardKey = Object.values(res.data)[0];\n        newCard.key = cardKey;\n        Axios.patch(`/folders/${this.props.activeFolderKey}/cards/${cardKey}.json`, {\n          'key': cardKey\n        });\n      });\n      this.setState(({\n        cards\n      }) => {\n        const newArr = [...cards, newCard];\n        return {\n          cards: newArr\n        };\n      });\n    };\n  }\n\n  createCard() {\n    return {\n      title: '',\n      subtitle: ''\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await Axios.get(`/folders/${this.props.activeFolderKey}/cards.json`);\n      const cards = [];\n      Object.values(response.data).forEach(card => {\n        cards.push(this.createCard());\n      });\n      this.setState({\n        cards\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, this.state.keys.map(key => {\n      return /*#__PURE__*/React.createElement(Card, {\n        name: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      });\n    }), /*#__PURE__*/React.createElement(AddCard, {\n      addCard: this.addCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Main/Main.js"],"names":["React","Component","Card","AddCard","Axios","Main","state","cards","addCard","newCard","createCard","post","props","activeFolderKey","then","res","cardKey","Object","values","data","key","patch","setState","newArr","title","subtitle","componentDidMount","response","get","forEach","card","push","e","console","log","render","keys","map"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAEvCK,KAFuC,GAE/B;AACJC,MAAAA,KAAK,EAAE;AADH,KAF+B;;AAAA,SAavCC,OAbuC,GAa7B,MAAM;AACZ,YAAMC,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACAN,MAAAA,KAAK,CAACO,IAAN,CAAY,YAAW,KAAKC,KAAL,CAAWC,eAAgB,aAAlD,EAAgEJ,OAAhE,EACCK,IADD,CACM,UAAUC,GAAV,EAAe;AACnB,cAAMC,OAAO,GAAKC,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACI,IAAlB,CAAD,CAA0B,CAA1B,CAAjB;AACAV,QAAAA,OAAO,CAACW,GAAR,GAAcJ,OAAd;AACAZ,QAAAA,KAAK,CAACiB,KAAN,CAAa,YAAW,KAAKT,KAAL,CAAWC,eAAgB,UAASG,OAAQ,OAApE,EAA4E;AAAC,iBAAOA;AAAR,SAA5E;AACD,OALD;AAOA,WAAKM,QAAL,CAAc,CAAC;AAAEf,QAAAA;AAAF,OAAD,KAAe;AACzB,cAAMgB,MAAM,GAAG,CACX,GAAGhB,KADQ,EAEXE,OAFW,CAAf;AAIA,eAAO;AACHF,UAAAA,KAAK,EAAEgB;AADJ,SAAP;AAGH,OARD;AASH,KA/BsC;AAAA;;AAMvCb,EAAAA,UAAU,GAAG;AACT,WAAO;AACHc,MAAAA,KAAK,EAAE,EADJ;AAEHC,MAAAA,QAAQ,EAAE;AAFP,KAAP;AAIH;;AAsBD,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAW,YAAW,KAAKhB,KAAL,CAAWC,eAAgB,aAAjD,CAAvB;AACA,YAAMN,KAAK,GAAG,EAAd;AACAU,MAAAA,MAAM,CAACC,MAAP,CAAcS,QAAQ,CAACR,IAAvB,EAA6BU,OAA7B,CAAsCC,IAAD,IAAU;AAC3CvB,QAAAA,KAAK,CAACwB,IAAN,CAAW,KAAKrB,UAAL,EAAX;AACH,OAFD;AAIA,WAAKY,QAAL,CAAc;AACVf,QAAAA;AADU,OAAd;AAIH,KAXD,CAWE,OAAOyB,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK7B,KAAL,CAAW8B,IAAX,CAAgBC,GAAhB,CAAqBjB,GAAD,IAAS;AAC1B,0BACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJA,CADL,eAMI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKZ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUH;;AA7DsC","sourcesContent":["// Контейнер для отображения элементов карточек с задачами\nimport React, {Component} from 'react'\nimport './Main.scss'\nimport Card from '../../components/Card/Card'\nimport AddCard from '../../components/UI/AddCard/AddCard'\nimport Axios from '../../axios/axios-folders'\n\nexport default class Main extends Component{\n\n    state = {\n        cards: [],\n    }\n\n    createCard() {\n        return {\n            title: '',\n            subtitle: '',\n        }\n    }\n\n    addCard = () => {\n        const newCard = this.createCard();\n        Axios.post(`/folders/${this.props.activeFolderKey}/cards.json`, newCard)\n        .then(function (res) {\n          const cardKey = ((Object.values(res.data))[0])\n          newCard.key = cardKey\n          Axios.patch(`/folders/${this.props.activeFolderKey}/cards/${cardKey}.json`, {'key': cardKey})\n        })\n\n        this.setState(({ cards }) => {\n            const newArr = [\n                ...cards,\n                newCard\n            ];\n            return {\n                cards: newArr\n            }\n        })\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await Axios.get(`/folders/${this.props.activeFolderKey}/cards.json`)\n            const cards = []\n            Object.values(response.data).forEach((card) => {\n                cards.push(this.createCard())\n            })\n\n            this.setState({\n                cards\n            })\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    render() {\n        return (\n            <div className='Main'>\n                {this.state.keys.map((key) => {\n                    return(\n                        <Card name={key} />\n                    )\n                })}\n                <AddCard addCard={this.addCard} />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}