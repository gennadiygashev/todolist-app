{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/components/Card/Card.js\";\nimport React, { Component } from 'react';\nimport Task from '../UI/Task/Task';\nimport AddTask from '../UI/AddTask/AddTask';\nimport './Card.scss';\nimport CardTitle from './CardTitle/CardTitle';\nimport Axios from '../../axios/axios-folders';\nexport default class Card extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n\n    this.addTask = async text => {\n      const newTask = this.createTask(text);\n      const activeFolderKey = this.props.activeFolderKey;\n      const cardKey = this.props.keyx;\n      await Axios.post(`/folders/${activeFolderKey}/cards/${cardKey}/tasks.json`, newTask).then(function (res) {\n        const taskKey = Object.values(res.data)[0];\n        newTask.key = taskKey;\n        Axios.patch(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${taskKey}.json`, {\n          'key': taskKey\n        });\n      });\n      this.setState(({\n        tasks\n      }) => {\n        const newArr = [...tasks, newTask];\n        return {\n          tasks: newArr\n        };\n      });\n    };\n\n    this.deleteTask = id => {\n      this.setState(({\n        tasks\n      }) => {\n        const idx = tasks.findIndex(el => el.id === id);\n        const newArr = [...tasks.slice(0, idx), ...tasks.slice(idx + 1)];\n        return {\n          tasks: newArr\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        items\n      }) => {\n        return {\n          items: this.toggleProperty(tasks, id, 'important')\n        };\n      });\n    };\n  }\n\n  createTask(name) {\n    return {\n      name,\n      important: false,\n      done: false\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  async componentDidMount() {\n    const cardKey = this.props.keyx;\n    const activeFolderKey = this.props.activeFolderKey;\n\n    try {\n      const response = await Axios.get(`/folders/${activeFolderKey}/cards/${cardKey}/tasks.json`);\n      const tasks = [];\n      Object.values(response.data).forEach(task => {\n        tasks.push(this.createTask(task.name));\n      });\n      this.setState({\n        tasks\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TaskElement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      keys: this.props.keyx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), this.state.tasks.map(item => {\n      return /*#__PURE__*/React.createElement(Task, {\n        name: item.name,\n        important: item.important,\n        done: item.done,\n        onToggleImportant: this.onToggleImportant,\n        onDeleted: this.deleteTask,\n        key: item.key,\n        keyx: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      });\n    }), /*#__PURE__*/React.createElement(AddTask, {\n      text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\",\n      onItemAdded: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/components/Card/Card.js"],"names":["React","Component","Task","AddTask","CardTitle","Axios","Card","state","tasks","addTask","text","newTask","createTask","activeFolderKey","props","cardKey","keyx","post","then","res","taskKey","Object","values","data","key","patch","setState","newArr","deleteTask","id","idx","findIndex","el","slice","onToggleImportant","items","toggleProperty","name","important","done","arr","propName","oldItem","newItem","componentDidMount","response","get","forEach","task","push","e","console","log","render","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Task from '../UI/Task/Task'\nimport AddTask from '../UI/AddTask/AddTask'\nimport './Card.scss'\nimport CardTitle from './CardTitle/CardTitle';\nimport Axios from '../../axios/axios-folders';\n\nexport default class Card extends Component {\n  state = {\n    tasks: []\n  }\n\n  createTask(name) {\n    return {\n        name,\n        important: false,\n        done: false,\n    }\n  }\n\n  addTask = async (text) => {\n    const newTask = this.createTask(text);\n    const activeFolderKey = this.props.activeFolderKey\n    const cardKey = this.props.keyx\n    await Axios.post(`/folders/${activeFolderKey}/cards/${cardKey}/tasks.json`, newTask)\n    .then(function (res) {\n      const taskKey = ((Object.values(res.data))[0])\n      newTask.key = taskKey\n      Axios.patch(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${taskKey}.json`, {'key': taskKey})\n    })\n    this.setState(({ tasks }) => {\n      const newArr = [\n        ...tasks,\n        newTask\n      ];\n      return {\n        tasks: newArr\n      }\n    })\n  }\n\n  deleteTask = (id) => {\n    this.setState(({ tasks }) => {\n      const idx = tasks.findIndex((el) => el.id === id)\n      const newArr = [\n        ...tasks.slice(0, idx),\n        ...tasks.slice(idx + 1)\n      ]\n      return {\n        tasks: newArr\n      }\n    })\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id);\n\n    const oldItem = arr[idx];\n    const newItem = {...oldItem,\n      [propName]: !oldItem[propName]}\n\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1)\n    ]\n  }\n\n  onToggleImportant = (id) => {\n    this.setState(({ items }) => {\n      return {\n        items: this.toggleProperty(tasks, id, 'important')\n      }\n    })\n  }\n\n    async componentDidMount() {\n      const cardKey = this.props.keyx\n      const activeFolderKey = this.props.activeFolderKey\n        try {\n            const response = await Axios.get(`/folders/${activeFolderKey}/cards/${cardKey}/tasks.json`)\n            const tasks = []\n\n            Object.values(response.data).forEach((task) => {\n                tasks.push(this.createTask(task.name))\n            })\n            this.setState({\n                tasks\n            })\n\n        } catch (e) {\n            console.log(e)\n        }\n    }  \n\n    render() {\n        return (\n            <div className='TaskElement'>\n                <CardTitle \n                  keys={this.props.keyx} \n                />\n                {this.state.tasks.map((item) => {\n                  return( \n                    <Task\n                      name={item.name}\n                      important={item.important}\n                      done={item.done}\n                      onToggleImportant={this.onToggleImportant}\n                      onDeleted={ this.deleteTask }\n                      key={item.key}\n                      keyx={item.key}\n                    />   \n                  )                 \n                })}\n                <AddTask text='Добавить новую задачу' onItemAdded={this.addTask} />\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}