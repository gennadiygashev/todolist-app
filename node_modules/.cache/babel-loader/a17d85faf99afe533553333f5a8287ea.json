{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js\";\n// Контейнер для панели коллекции папок\nimport React, { Component } from 'react';\nimport './Menu.scss';\nimport AddTask from '../../components/UI/AddTask/AddTask';\nimport Folder from '../../components/UI/Folder/Folder';\nimport Axios from '../../axios/axios-folders';\nexport default class Menu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 1000;\n    this.state = {\n      folders: []\n    };\n\n    this.addFolder = text => {\n      const newFolder = this.createFolder(text);\n      const response = Axios.post(`/folders.json`, newFolder).then(function (res) {\n        console.log(Object.values(res.data)[0]);\n      });\n      this.setState(({\n        folders\n      }) => {\n        const newArr = [...folders, newFolder];\n        return {\n          folders: newArr\n        };\n      });\n      Axios.post(`/folders.json`, newFolder).then(function (res) {\n        console.log(Object.values(res.data)[0]);\n      });\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        folders\n      }) => {\n        const idx = folders.findIndex(el => el.id === id);\n        const newArray = [...folders.slice(0, idx), ...folders.slice(idx + 1)];\n        return {\n          folders: newArray\n        };\n      });\n    };\n\n    this.onSelectFolder = title => {\n      console.log(title);\n    };\n  }\n\n  createFolder(name) {\n    return {\n      name,\n      id: this.maxId++,\n      key: ''\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await Axios.get('/folders.json');\n      const folders = [];\n      Object.values(response.data).forEach(folder => {\n        folders.push(folder);\n      });\n      this.setState({\n        folders\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, this.state.folders.map(item => {\n      return /*#__PURE__*/React.createElement(Folder, {\n        title: item.name,\n        id: item.id,\n        onDelete: this.deleteItem,\n        onSelectFolder: this.onSelectFolder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addTask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AddTask, {\n      text: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\",\n      onItemAdded: this.addFolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js"],"names":["React","Component","AddTask","Folder","Axios","Menu","maxId","state","folders","addFolder","text","newFolder","createFolder","response","post","then","res","console","log","Object","values","data","setState","newArr","deleteItem","id","idx","findIndex","el","newArray","slice","onSelectFolder","title","name","key","componentDidMount","get","forEach","folder","push","e","render","map","item"],"mappings":"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","sourcesContent":["// Контейнер для панели коллекции папок\nimport React, {Component} from 'react'\nimport './Menu.scss'\nimport AddTask from '../../components/UI/AddTask/AddTask'\nimport Folder from '../../components/UI/Folder/Folder'\nimport Axios from '../../axios/axios-folders'\n\nexport default class Menu extends Component {\n    maxId = 1000\n\n\tstate = {\n\t\tfolders: [\n    ]\n\t}\n\n\tcreateFolder(name) {\n        return {\n            name,\n            id: this.maxId++,\n            key: ''\n        }\n    }\n\n    addFolder = (text) => {\n        const newFolder = this.createFolder(text);\n        const response = Axios.post(`/folders.json`, newFolder)\n        .then(function (res) {\n          console.log((Object.values(res.data))[0])\n        })\n        this.setState(({ folders }) => {\n            const newArr = [\n                ...folders,\n                newFolder\n            ];\n            return {\n                folders: newArr\n            }\n        })\n      Axios.post(`/folders.json`, newFolder)\n          .then(function (res) {\n            console.log((Object.values(res.data))[0])\n          })\n\n    };\n\n    deleteItem = (id) => {\n        this.setState(({ folders }) => {\n            const idx = folders.findIndex((el) => el.id === id);\n            const newArray = [\n                ...folders.slice(0, idx),\n                ...folders.slice(idx + 1)\n            ];\n            return {\n                folders: newArray\n            }\n        })\n    };\n\n    onSelectFolder = (title) => {\n      console.log(title)\n    }\n\n    async componentDidMount() {\n      try {\n        const response = await Axios.get('/folders.json')\n        const folders = []\n\n        Object.values(response.data).forEach((folder) => {\n          folders.push(folder)\n        })\n    \n        this.setState({\n          folders\n        })\n    \n      } catch (e) {\n        console.log(e)\n      }\n    }\n  \n\n    render() {\n        return (\n            <div className='Menu'>\n                <ul className=\"list-group\">\n                    {\n                        this.state.folders.map((item) => {\n                            return(\n                                <Folder \n                                    title={item.name} \n                                    id={item.id}           \n                                    onDelete={this.deleteItem}\n                                    onSelectFolder={this.onSelectFolder}\n                                />\n                            )\n                        })\n                    }\n                    <div className='addTask'>\n                        <AddTask \n                            text='Новая папка' \n                            onItemAdded={this.addFolder}\n                        />\n                    </div>\n                </ul>\n            </div>\n        )    \n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}