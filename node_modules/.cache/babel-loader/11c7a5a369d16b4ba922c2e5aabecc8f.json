{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/components/Card/Card.js\";\nimport React, { useState, useEffect } from 'react';\nimport Task from '../UI/Task/Task';\nimport AddTask from '../UI/AddTask/AddTask';\nimport CardTitle from './CardTitle/CardTitle';\nimport Axios from '../../axios/axios-folders';\nimport DeleteCard from '../UI/DeleteCard/DeleteCard';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Card from '@material-ui/core/Card';\nexport default function CardT(props) {\n  const [data, setData] = useState({\n    tasks: []\n  });\n  const [loading, setLoading] = useState(tru);\n\n  const createTask = name => {\n    return {\n      name,\n      important: false,\n      done: false,\n      key: ''\n    };\n  };\n\n  const addTask = async text => {\n    const newTask = createTask(text);\n    const activeFolderKey = props.activeFolderKey;\n    const cardKey = props.keyx;\n    await Axios.post(`/folders/${activeFolderKey}/cards/${cardKey}/tasks.json`, newTask).then(function (res) {\n      const taskKey = Object.values(res.data)[0];\n      newTask.key = taskKey;\n      Axios.patch(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${taskKey}.json`, {\n        'key': taskKey\n      });\n    });\n    setData(({\n      tasks\n    }) => {\n      const newArr = [...tasks, newTask];\n      return {\n        tasks: newArr\n      };\n    });\n  };\n\n  const deleteTask = (name, key) => {\n    const idx = data.tasks.findIndex(el => el.name === name);\n    const activeFolderKey = props.activeFolderKey;\n    const cardKey = props.keyx;\n    Axios.delete(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${key}.json`);\n    setData(({\n      tasks\n    }) => {\n      const newArr = [...tasks.slice(0, idx), ...tasks.slice(idx + 1)];\n      return {\n        tasks: newArr\n      };\n    });\n  };\n\n  const toggleProperty = (arr, name, propName) => {\n    const idx = arr.findIndex(el => el.name === name);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  };\n\n  const onToggleImportant = (name, key) => {\n    const idx = data.tasks.findIndex(el => el.name === name);\n    const oldItem = data.tasks[idx];\n    const newItem = { ...oldItem,\n      ['important']: !oldItem['important']\n    };\n    const activeFolderKey = props.activeFolderKey;\n    const cardKey = props.keyx;\n    const taskKey = key;\n    Axios.patch(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${taskKey}.json`, {\n      'important': newItem.important\n    });\n    setData(({\n      tasks\n    }) => {\n      return {\n        tasks: toggleProperty(tasks, name, 'important')\n      };\n    });\n  };\n\n  const onComplete = (name, key) => {\n    const idx = data.tasks.findIndex(el => el.name === name);\n    const oldItem = data.tasks[idx];\n    const newItem = { ...oldItem,\n      ['done']: !oldItem['done']\n    };\n    const activeFolderKey = props.activeFolderKey;\n    const cardKey = props.keyx;\n    const taskKey = key;\n    Axios.patch(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${taskKey}.json`, {\n      'done': newItem.done\n    });\n    setData(({\n      tasks\n    }) => {\n      return {\n        tasks: toggleProperty(tasks, name, 'done')\n      };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const cardKey = props.keyx;\n        const activeFolderKey = props.activeFolderKey;\n        const responseTasks = await Axios.get(`/folders/${activeFolderKey}/cards/${cardKey}/tasks.json`);\n        const tasks = [];\n        Object.values(responseTasks.data).forEach(task => {\n          tasks.push(task);\n        });\n        setData({\n          tasks\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      minHeight: '83vh',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 16\n      }\n    }),\n    action: /*#__PURE__*/React.createElement(DeleteCard, {\n      cardKey: props.id,\n      deleteCard: props.onDeleteCard,\n      keyx: props.keyx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, data.tasks.map(task => {\n    return /*#__PURE__*/React.createElement(Task, {\n      name: task.name,\n      important: task.important,\n      done: task.done,\n      key: task.key,\n      keyx: task.key,\n      onToggleImportant: onToggleImportant,\n      onDeleted: deleteTask,\n      onComplete: onComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    });\n  }), /*#__PURE__*/React.createElement(AddTask, {\n    text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\",\n    onItemAdded: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/components/Card/Card.js"],"names":["React","useState","useEffect","Task","AddTask","CardTitle","Axios","DeleteCard","CardHeader","CardContent","Card","CardT","props","data","setData","tasks","loading","setLoading","tru","createTask","name","important","done","key","addTask","text","newTask","activeFolderKey","cardKey","keyx","post","then","res","taskKey","Object","values","patch","newArr","deleteTask","idx","findIndex","el","delete","slice","toggleProperty","arr","propName","oldItem","newItem","onToggleImportant","onComplete","fetchData","responseTasks","get","forEach","task","push","e","console","log","minHeight","height","id","onDeleteCard","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Task from '../UI/Task/Task'\nimport AddTask from '../UI/AddTask/AddTask'\nimport CardTitle from './CardTitle/CardTitle';\nimport Axios from '../../axios/axios-folders';\nimport DeleteCard from '../UI/DeleteCard/DeleteCard';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Card from '@material-ui/core/Card';\n\n\nexport default function CardT(props) {\n\n  const [data, setData] = useState({ tasks: [] })\n  const [loading, setLoading] = useState(tru)\n\n  const createTask = (name) => {\n    return {\n      name,\n      important: false,\n      done: false,\n      key: ''\n    }\n  }\n\n  const addTask = async (text) => {\n    const newTask = createTask(text);\n    const activeFolderKey = props.activeFolderKey\n    const cardKey = props.keyx\n    await Axios.post(`/folders/${activeFolderKey}/cards/${cardKey}/tasks.json`, newTask)\n    .then(function (res) {\n      const taskKey = ((Object.values(res.data))[0])\n      newTask.key = taskKey\n      Axios.patch(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${taskKey}.json`, {'key': taskKey})\n    })\n    setData(({ tasks }) => {\n      const newArr = [\n        ...tasks,\n        newTask\n      ];\n      return {\n        tasks: newArr\n      }\n    })\n  }\n\n  const deleteTask = (name, key) => {\n    const idx = data.tasks.findIndex((el) => el.name === name)\n    const activeFolderKey = props.activeFolderKey\n    const cardKey = props.keyx\n    Axios.delete(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${key}.json`)\n    setData(({ tasks }) => {\n      const newArr = [\n        ...tasks.slice(0, idx),\n        ...tasks.slice(idx + 1)\n      ]\n      return {\n        tasks: newArr\n      }\n    })\n  }\n\n  const toggleProperty = (arr, name, propName) => {\n    const idx = arr.findIndex((el) => el.name === name);\n\n    const oldItem = arr[idx];\n    const newItem = {...oldItem,\n      [propName]: !oldItem[propName]}\n\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1)\n    ]\n  }\n\n  const onToggleImportant = (name, key) => {\n    const idx = data.tasks.findIndex((el) => el.name === name);\n    const oldItem = data.tasks[idx];\n    const newItem = {...oldItem,\n      ['important']: !oldItem['important']\n    }\n    const activeFolderKey = props.activeFolderKey\n    const cardKey = props.keyx\n    const taskKey = key\n    Axios.patch(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${taskKey}.json`, {'important': newItem.important})\n    setData(({ tasks }) => {\n      return {\n        tasks: toggleProperty(tasks, name, 'important')\n      }\n    })\n  }\n\n  const onComplete = (name, key) => {\n    const idx = data.tasks.findIndex((el) => el.name === name);\n    const oldItem = data.tasks[idx];\n    const newItem = {...oldItem,\n      ['done']: !oldItem['done']\n    }\n    const activeFolderKey = props.activeFolderKey\n    const cardKey = props.keyx\n    const taskKey = key\n    Axios.patch(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${taskKey}.json`, {'done': newItem.done})\n    setData(({ tasks }) => {\n      return {\n        tasks: toggleProperty(tasks, name, 'done')\n      }\n    })\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {  \n        const cardKey = props.keyx\n        const activeFolderKey = props.activeFolderKey\n        const responseTasks = await Axios.get(`/folders/${activeFolderKey}/cards/${cardKey}/tasks.json`)\n        const tasks = []\n        Object.values(responseTasks.data).forEach((task) => {\n          tasks.push(task)\n        })  \n        setData({\n          tasks\n        }) \n      } catch (e) {\n        console.log(e)\n      }  \n    }\n    fetchData()\n  }, [])\n\n  return (\n    <Card style={{ minHeight: '83vh', height: '100%' }}>\n      <CardHeader\n        title={<CardTitle />}\n        action={\n          <DeleteCard \n            cardKey={props.id}  \n            deleteCard={props.onDeleteCard}\n            keyx={props.keyx}\n          />\n        }\n      />\n      <CardContent>\n        {data.tasks.map((task) => {\n          return( \n            <Task\n              name={task.name}\n              important={task.important}\n              done={task.done}\n              key={task.key}\n              keyx={task.key}\n              onToggleImportant={onToggleImportant}\n              onDeleted={deleteTask}\n              onComplete={onComplete}\n            />   \n          )                 \n        })}\n        <AddTask text='Добавить задачу' onItemAdded={addTask} />\n      </CardContent>\n    </Card> \n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}