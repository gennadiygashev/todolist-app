{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Main/Main.js\";\n// Контейнер для отображения элементов карточек с задачами\nimport React, { Component } from 'react';\nimport './Main.scss';\nimport Card from '../../components/Card/Card';\nimport AddCard from '../../components/AddCard/AddCard';\nimport Axios from 'axios';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 1000;\n    this.state = {\n      cards: [this.createCard(this.createTask())]\n    };\n\n    this.addCard = id => {\n      const newCard = this.createCard(id);\n      this.setState(({\n        cards\n      }) => {\n        const newArr = [...cards, newCard];\n        return {\n          cards: newArr\n        };\n      });\n      Axios.post('https://tasks-8f93f.firebaseio.com/cards.json', newCard);\n    };\n  }\n\n  createTask(name) {\n    return {\n      name,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  createCard(task) {\n    return {\n      title: '',\n      subtitle: '',\n      id: this.maxId++,\n      tasks: [task]\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await Axios.get('https://tasks-8f93f.firebaseio.com/cards.json');\n      const cards = [];\n      Object.values(response.data).forEach(key => {\n        cards.push(this.createCard(key.tasks));\n      });\n      this.setState({\n        cards\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, this.state.cards.map(card => {\n      return /*#__PURE__*/React.createElement(Card, {\n        tasks: card.tasks,\n        addTask: this.addTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      });\n    }), /*#__PURE__*/React.createElement(AddCard, {\n      addCard: this.addCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Main/Main.js"],"names":["React","Component","Card","AddCard","Axios","Main","maxId","state","cards","createCard","createTask","addCard","id","newCard","setState","newArr","post","name","important","done","task","title","subtitle","tasks","componentDidMount","response","get","Object","values","data","forEach","key","push","e","console","log","render","map","card","addTask"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA4B;AAAA;AAAA;AAAA,SACvCK,KADuC,GAC/B,IAD+B;AAAA,SAGvCC,KAHuC,GAG/B;AACJC,MAAAA,KAAK,EAAE,CACH,KAAKC,UAAL,CAAgB,KAAKC,UAAL,EAAhB,CADG;AADH,KAH+B;;AAAA,SA2BvCC,OA3BuC,GA2B5BC,EAAD,IAAQ;AACd,YAAMC,OAAO,GAAG,KAAKJ,UAAL,CAAgBG,EAAhB,CAAhB;AACA,WAAKE,QAAL,CAAc,CAAC;AAAEN,QAAAA;AAAF,OAAD,KAAe;AACzB,cAAMO,MAAM,GAAG,CACX,GAAGP,KADQ,EAEXK,OAFW,CAAf;AAIA,eAAO;AACHL,UAAAA,KAAK,EAAEO;AADJ,SAAP;AAGH,OARD;AASAX,MAAAA,KAAK,CAACY,IAAN,CAAW,+CAAX,EAA4DH,OAA5D;AACH,KAvCsC;AAAA;;AASvCH,EAAAA,UAAU,CAACO,IAAD,EAAO;AACb,WAAO;AACHA,MAAAA,IADG;AAEHC,MAAAA,SAAS,EAAE,KAFR;AAGHC,MAAAA,IAAI,EAAE,KAHH;AAIHP,MAAAA,EAAE,EAAE,KAAKN,KAAL;AAJD,KAAP;AAMH;;AAEDG,EAAAA,UAAU,CAACW,IAAD,EAAO;AACb,WAAO;AACHC,MAAAA,KAAK,EAAE,EADJ;AAEHC,MAAAA,QAAQ,EAAE,EAFP;AAGHV,MAAAA,EAAE,EAAE,KAAKN,KAAL,EAHD;AAIHiB,MAAAA,KAAK,EAAE,CAACH,IAAD;AAJJ,KAAP;AAMH;;AAgBD,QAAMI,iBAAN,GAA0B;AACtB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,+CAAV,CAAvB;AACA,YAAMlB,KAAK,GAAG,EAAd;AAEAmB,MAAAA,MAAM,CAACC,MAAP,CAAcH,QAAQ,CAACI,IAAvB,EAA6BC,OAA7B,CAAsCC,GAAD,IAAS;AAC1CvB,QAAAA,KAAK,CAACwB,IAAN,CAAW,KAAKvB,UAAL,CAAgBsB,GAAG,CAACR,KAApB,CAAX;AACH,OAFD;AAIA,WAAKT,QAAL,CAAc;AACVN,QAAAA;AADU,OAAd;AAIH,KAZD,CAYE,OAAOyB,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AAGDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK7B,KAAL,CAAWC,KAAX,CAAiB6B,GAAjB,CAAsBC,IAAD,IAAU;AAC5B,0BACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,IAAI,CAACf,KAAlB;AAAyB,QAAA,OAAO,EAAE,KAAKgB,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJA,CADL,eAQI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAK5B,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAYH;;AAzEsC","sourcesContent":["// Контейнер для отображения элементов карточек с задачами\nimport React, {Component} from 'react'\nimport './Main.scss'\nimport Card from '../../components/Card/Card'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Axios from 'axios'\n\nexport default class Main extends Component{\n    maxId = 1000\n\n    state = {\n        cards: [\n            this.createCard(this.createTask())\n        ]\n    }\n\n    createTask(name) {\n        return {\n            name,\n            important: false,\n            done: false,\n            id: this.maxId++\n        }\n    }\n\n    createCard(task) {\n        return {\n            title: '',\n            subtitle: '',\n            id: this.maxId++,\n            tasks: [task]\n        }\n    }\n\n    addCard = (id) => {\n        const newCard = this.createCard(id);\n        this.setState(({ cards }) => {\n            const newArr = [\n                ...cards,\n                newCard\n            ];\n            return {\n                cards: newArr\n            }\n        })\n        Axios.post('https://tasks-8f93f.firebaseio.com/cards.json', newCard)\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await Axios.get('https://tasks-8f93f.firebaseio.com/cards.json')\n            const cards = []\n\n            Object.values(response.data).forEach((key) => {\n                cards.push(this.createCard(key.tasks))\n            })\n\n            this.setState({\n                cards\n            })\n\n        } catch (e) {\n            console.log(e)\n        }\n    }  \n\n\n    render() {\n        return (\n            <div className='Main'>\n                {this.state.cards.map((card) => {\n                    return(\n                        <Card tasks={card.tasks} addTask={this.addTask} />\n                    )\n                })\n\n                }\n                <AddCard addCard={this.addCard} />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}