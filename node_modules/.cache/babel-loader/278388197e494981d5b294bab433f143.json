{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/components/Card/Card.js\";\nimport React, { Component } from 'react';\nimport Checkbox from '../UI/Task/Task';\nimport AddTask from '../UI/AddTask/AddTask';\nimport './Card.scss';\nimport CardTitle from './CardTitle/CardTitle';\nimport Axios from '../../axios/axios-folders';\nexport default class Card extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n\n    this.addTask = text => {\n      const newTask = this.createTask(text);\n      Axios.post(`/folders/${this.props.activeFolderKey}/cards/${this.props.keyx}/tasks.json`, newTask).then(function (res) {\n        const taskKey = Object.values(res.data)[0];\n        newTask.key = taskKey;\n        Axios.patch(`/folders/${this.props.activeFolderKey}/cards/${this.props.keyx}/tasks/{taskKey}.json`, {\n          'key': folderKey\n        });\n      });\n      this.setState(({\n        tasks\n      }) => {\n        const newArr = [...tasks, newTask];\n        return {\n          tasks: newArr\n        };\n      });\n    };\n\n    this.deleteTask = id => {\n      this.setState(({\n        tasks\n      }) => {\n        const idx = tasks.findIndex(el => el.id === id);\n        const newArr = [...tasks.slice(0, idx), ...tasks.slice(idx + 1)];\n        return {\n          tasks: newArr\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        items\n      }) => {\n        return {\n          items: this.toggleProperty(items, id, 'important')\n        };\n      });\n    };\n  }\n\n  createTask(name) {\n    return {\n      name,\n      important: false,\n      done: false\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await Axios.get(`/folders/${this.props.activeFolderKey}/cards/${this.props.keyx}/tasks.json`);\n      const items = [];\n      Object.values(response.data).forEach(task => {\n        items.push(this.createTask(task.name));\n      });\n      this.setState({\n        items\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TaskElement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), this.state.tasks.map(item => {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        name: item.name,\n        important: item.important,\n        done: item.done,\n        onToggleImportant: this.onToggleImportant,\n        onDeleted: this.deleteTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      });\n    }), /*#__PURE__*/React.createElement(AddTask, {\n      text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\",\n      onItemAdded: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/components/Card/Card.js"],"names":["React","Component","Checkbox","AddTask","CardTitle","Axios","Card","state","tasks","addTask","text","newTask","createTask","post","props","activeFolderKey","keyx","then","res","taskKey","Object","values","data","key","patch","folderKey","setState","newArr","deleteTask","id","idx","findIndex","el","slice","onToggleImportant","items","toggleProperty","name","important","done","arr","propName","oldItem","newItem","componentDidMount","response","get","forEach","task","push","e","console","log","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CM,KAD0C,GAClC;AACNC,MAAAA,KAAK,EAAE;AADD,KADkC;;AAAA,SAa1CC,OAb0C,GAa/BC,IAAD,IAAU;AAClB,YAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgBF,IAAhB,CAAhB;AACAL,MAAAA,KAAK,CAACQ,IAAN,CAAY,YAAW,KAAKC,KAAL,CAAWC,eAAgB,UAAS,KAAKD,KAAL,CAAWE,IAAK,aAA3E,EAAyFL,OAAzF,EACCM,IADD,CACM,UAAUC,GAAV,EAAe;AACnB,cAAMC,OAAO,GAAKC,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACI,IAAlB,CAAD,CAA0B,CAA1B,CAAjB;AACAX,QAAAA,OAAO,CAACY,GAAR,GAAcJ,OAAd;AACAd,QAAAA,KAAK,CAACmB,KAAN,CAAa,YAAW,KAAKV,KAAL,CAAWC,eAAgB,UAAS,KAAKD,KAAL,CAAWE,IAAK,uBAA5E,EAAoG;AAAC,iBAAOS;AAAR,SAApG;AACD,OALD;AAOA,WAAKC,QAAL,CAAc,CAAC;AAAElB,QAAAA;AAAF,OAAD,KAAe;AAC3B,cAAMmB,MAAM,GAAG,CACb,GAAGnB,KADU,EAEbG,OAFa,CAAf;AAIA,eAAO;AACLH,UAAAA,KAAK,EAAEmB;AADF,SAAP;AAGD,OARD;AASD,KA/ByC;;AAAA,SAiC1CC,UAjC0C,GAiC5BC,EAAD,IAAQ;AACnB,WAAKH,QAAL,CAAc,CAAC;AAAElB,QAAAA;AAAF,OAAD,KAAe;AAC3B,cAAMsB,GAAG,GAAGtB,KAAK,CAACuB,SAAN,CAAiBC,EAAD,IAAQA,EAAE,CAACH,EAAH,KAAUA,EAAlC,CAAZ;AACA,cAAMF,MAAM,GAAG,CACb,GAAGnB,KAAK,CAACyB,KAAN,CAAY,CAAZ,EAAeH,GAAf,CADU,EAEb,GAAGtB,KAAK,CAACyB,KAAN,CAAYH,GAAG,GAAG,CAAlB,CAFU,CAAf;AAIA,eAAO;AACLtB,UAAAA,KAAK,EAAEmB;AADF,SAAP;AAGD,OATD;AAUD,KA5CyC;;AAAA,SA4D1CO,iBA5D0C,GA4DrBL,EAAD,IAAQ;AAC1B,WAAKH,QAAL,CAAc,CAAC;AAAES,QAAAA;AAAF,OAAD,KAAe;AAC3B,eAAO;AACLA,UAAAA,KAAK,EAAE,KAAKC,cAAL,CAAoBD,KAApB,EAA2BN,EAA3B,EAA+B,WAA/B;AADF,SAAP;AAGD,OAJD;AAKD,KAlEyC;AAAA;;AAK1CjB,EAAAA,UAAU,CAACyB,IAAD,EAAO;AACf,WAAO;AACHA,MAAAA,IADG;AAEHC,MAAAA,SAAS,EAAE,KAFR;AAGHC,MAAAA,IAAI,EAAE;AAHH,KAAP;AAKD;;AAmCDH,EAAAA,cAAc,CAACI,GAAD,EAAMX,EAAN,EAAUY,QAAV,EAAoB;AAChC,UAAMX,GAAG,GAAGU,GAAG,CAACT,SAAJ,CAAeC,EAAD,IAAQA,EAAE,CAACH,EAAH,KAAUA,EAAhC,CAAZ;AAEA,UAAMa,OAAO,GAAGF,GAAG,CAACV,GAAD,CAAnB;AACA,UAAMa,OAAO,GAAG,EAAC,GAAGD,OAAJ;AACd,OAACD,QAAD,GAAY,CAACC,OAAO,CAACD,QAAD;AADN,KAAhB;AAGA,WAAO,CACL,GAAGD,GAAG,CAACP,KAAJ,CAAU,CAAV,EAAaH,GAAb,CADE,EAELa,OAFK,EAGL,GAAGH,GAAG,CAACP,KAAJ,CAAUH,GAAG,GAAG,CAAhB,CAHE,CAAP;AAKD;;AASC,QAAMc,iBAAN,GAA0B;AACtB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMxC,KAAK,CAACyC,GAAN,CAAW,YAAW,KAAKhC,KAAL,CAAWC,eAAgB,UAAS,KAAKD,KAAL,CAAWE,IAAK,aAA1E,CAAvB;AACA,YAAMmB,KAAK,GAAG,EAAd;AAEAf,MAAAA,MAAM,CAACC,MAAP,CAAcwB,QAAQ,CAACvB,IAAvB,EAA6ByB,OAA7B,CAAsCC,IAAD,IAAU;AAC3Cb,QAAAA,KAAK,CAACc,IAAN,CAAW,KAAKrC,UAAL,CAAgBoC,IAAI,CAACX,IAArB,CAAX;AACH,OAFD;AAGA,WAAKX,QAAL,CAAc;AACVS,QAAAA;AADU,OAAd;AAIH,KAXD,CAWE,OAAOe,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AAIDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAK9C,KAAL,CAAWC,KAAX,CAAiB8C,GAAjB,CAAsBC,IAAD,IAAU;AAC5B,0BACI,oBAAC,QAAD;AACI,QAAA,IAAI,EAAEA,IAAI,CAAClB,IADf;AAEI,QAAA,SAAS,EAAEkB,IAAI,CAACjB,SAFpB;AAGI,QAAA,IAAI,EAAEiB,IAAI,CAAChB,IAHf;AAII,QAAA,iBAAiB,EAAE,KAAKL,iBAJ5B;AAKI,QAAA,SAAS,EAAG,KAAKN,UALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AASH,KAVA,CAFL,eAaI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,sHAAd;AAAsC,MAAA,WAAW,EAAE,KAAKnB,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ;AAiBH;;AAxGuC","sourcesContent":["import React, {Component} from 'react'\nimport Checkbox from '../UI/Task/Task'\nimport AddTask from '../UI/AddTask/AddTask'\nimport './Card.scss'\nimport CardTitle from './CardTitle/CardTitle';\nimport Axios from '../../axios/axios-folders';\n\nexport default class Card extends Component {\n  state = {\n    tasks: []\n  }\n\n  createTask(name) {\n    return {\n        name,\n        important: false,\n        done: false,\n    }\n  }\n\n  addTask = (text) => {\n    const newTask = this.createTask(text);\n    Axios.post(`/folders/${this.props.activeFolderKey}/cards/${this.props.keyx}/tasks.json`, newTask)\n    .then(function (res) {\n      const taskKey = ((Object.values(res.data))[0])\n      newTask.key = taskKey\n      Axios.patch(`/folders/${this.props.activeFolderKey}/cards/${this.props.keyx}/tasks/{taskKey}.json`, {'key': folderKey})\n    })\n\n    this.setState(({ tasks }) => {\n      const newArr = [\n        ...tasks,\n        newTask\n      ];\n      return {\n        tasks: newArr\n      }\n    })\n  }\n\n  deleteTask = (id) => {\n    this.setState(({ tasks }) => {\n      const idx = tasks.findIndex((el) => el.id === id)\n      const newArr = [\n        ...tasks.slice(0, idx),\n        ...tasks.slice(idx + 1)\n      ]\n      return {\n        tasks: newArr\n      }\n    })\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id);\n\n    const oldItem = arr[idx];\n    const newItem = {...oldItem,\n      [propName]: !oldItem[propName]}\n\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1)\n    ]\n  }\n\n  onToggleImportant = (id) => {\n    this.setState(({ items }) => {\n      return {\n        items: this.toggleProperty(items, id, 'important')\n      }\n    })\n  }\n    async componentDidMount() {\n        try {\n            const response = await Axios.get(`/folders/${this.props.activeFolderKey}/cards/${this.props.keyx}/tasks.json`)\n            const items = []\n\n            Object.values(response.data).forEach((task) => {\n                items.push(this.createTask(task.name))\n            })\n            this.setState({\n                items\n            })\n\n        } catch (e) {\n            console.log(e)\n        }\n    }  \n\n\n\n    render() {\n        return (\n            <div className='TaskElement'>\n                <CardTitle />\n                {this.state.tasks.map((item) => {\n                    return( \n                        <Checkbox\n                            name={item.name}\n                            important={item.important}\n                            done={item.done}\n                            onToggleImportant={this.onToggleImportant}\n                            onDeleted={ this.deleteTask }\n                        />   \n                    )                 \n                })}\n                <AddTask text='Добавить новую задачу' onItemAdded={this.addTask} />\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}