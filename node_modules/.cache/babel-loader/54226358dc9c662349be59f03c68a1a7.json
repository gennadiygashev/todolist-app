{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js\";\n// Контейнер для панели коллекции папок\nimport React, { Component } from 'react';\nimport AddTask from '../../components/UI/AddTask/AddTask';\nimport Folder from '../../components/UI/Folder/Folder';\nimport Axios from '../../axios/axios-folders';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core/';\nexport default class Menu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      folders: []\n    };\n\n    this.deleteFolder = id => {\n      this.setState(({\n        folders\n      }) => {\n        const idx = folders.findIndex(el => el.id === id);\n        const newArray = [...folders.slice(0, idx), ...folders.slice(idx + 1)];\n        return {\n          folders: newArray\n        };\n      });\n    };\n\n    this.addFolder = async text => {\n      console.log('Folder 1');\n      const newFolder = this.createFolder(text);\n      await Axios.post(`/folders.json`, newFolder).then(function (res) {\n        console.log('Folder 2');\n        const folderKey = Object.values(res.data)[0];\n        newFolder.key = folderKey;\n        Axios.patch(`/folders/${folderKey}.json`, {\n          'key': folderKey\n        });\n      });\n      this.setState(({\n        folders\n      }) => {\n        console.log('Folder 3');\n        const newArr = [...folders, newFolder];\n        return {\n          folders: newArr\n        };\n      });\n    };\n  }\n\n  createFolder(name) {\n    return {\n      name\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const responseFolders = await Axios.get('/folders.json');\n      const folders = [];\n      Object.values(responseFolders.data).forEach(folder => {\n        folders.push(folder);\n      });\n      this.setState({\n        folders\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.folders.map(item => /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: item.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MailIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addTask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddTask, {\n      text: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\",\n      onItemAdded: this.addFolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }))) // {\n    //   this.state.folders.map((item) => {\n    //     return(\n    //       <Folder \n    //         title={item.name} \n    //         keyx={item.key}  \n    //         key={item.key}        \n    //         onDelete={this.deleteItem}\n    //       />\n    //     )\n    //   })\n    // }\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js"],"names":["React","Component","AddTask","Folder","Axios","MailIcon","ListItem","ListItemIcon","ListItemText","Menu","state","folders","deleteFolder","id","setState","idx","findIndex","el","newArray","slice","addFolder","text","console","log","newFolder","createFolder","post","then","res","folderKey","Object","values","data","key","patch","newArr","name","componentDidMount","responseFolders","get","forEach","folder","push","e","render","map","item"],"mappings":"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","sourcesContent":["// Контейнер для панели коллекции папок\nimport React, {Component} from 'react'\nimport AddTask from '../../components/UI/AddTask/AddTask'\nimport Folder from '../../components/UI/Folder/Folder'\nimport Axios from '../../axios/axios-folders'\nimport MailIcon from '@material-ui/icons/Mail';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core/'\n\n\nexport default class Menu extends Component {\n  state = {\n    folders: [],\n  }\n\n  createFolder(name) {\n    return {\n      name\n    }\n  }\n\n  deleteFolder = (id) => {\n    this.setState(({ folders }) => {\n      const idx = folders.findIndex((el) => el.id === id);\n      const newArray = [\n        ...folders.slice(0, idx),\n        ...folders.slice(idx + 1)\n      ]\n      return {\n        folders: newArray\n      }\n    })\n  }\n\n  addFolder = async (text) => {\n    console.log('Folder 1')\n    const newFolder = this.createFolder(text);\n    await Axios.post(`/folders.json`, newFolder)\n    .then(function (res) {\n      console.log('Folder 2')\n      const folderKey = ((Object.values(res.data))[0])\n      newFolder.key = folderKey\n      Axios.patch(`/folders/${folderKey}.json`, {'key': folderKey})\n    })\n    this.setState(({ folders }) => {\n      console.log('Folder 3')\n      const newArr = [\n        ...folders,\n        newFolder\n      ];\n      return {\n        folders: newArr\n      }\n    })\n  }\n\n  async componentDidMount() {\n    try {      \n      const responseFolders = await Axios.get('/folders.json')\n      const folders = []\n      Object.values(responseFolders.data).forEach((folder) => {\n        folders.push(folder)\n      })  \n      this.setState({\n        folders\n      }) \n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.folders.map((item) => (\n          <ListItem button key={item.key}>\n            <ListItemIcon><MailIcon /></ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}          \n        <div className='addTask'>\n          <AddTask \n            text='Новая папка' \n            onItemAdded={this.addFolder}\n          />\n        </div>\n      </>\n          // {\n          //   this.state.folders.map((item) => {\n          //     return(\n          //       <Folder \n          //         title={item.name} \n          //         keyx={item.key}  \n          //         key={item.key}        \n          //         onDelete={this.deleteItem}\n          //       />\n          //     )\n          //   })\n          // }\n    )    \n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}