{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Main/Main.js\";\n// Контейнер для отображения элементов карточек с задачами\nimport React, { Component } from 'react';\nimport './Main.scss';\nimport Card from '../../components/Card/Card';\nimport AddCard from '../../components/AddCard/AddCard';\nimport Axios from 'axios';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 1000;\n    this.state = {\n      cards: [],\n      keys: []\n    };\n\n    this.addTask = text => {\n      const newItem = this.createTask(text);\n      this.setState(({\n        items\n      }) => {\n        const newArr = [...items, newItem];\n        return {\n          items: newArr\n        };\n      });\n      Axios.post(`https://tasks-8f93f.firebaseio.com/cards/${this.props.name}/tasks.json`, newItem);\n    };\n\n    this.addCard = () => {\n      const newCard = this.createCard();\n      this.setState(({\n        cards\n      }) => {\n        const newArr = [...cards, newCard];\n        return {\n          cards: newArr\n        };\n      });\n      Axios.post('https://tasks-8f93f.firebaseio.com/cards.json', newCard);\n      this.addCardToState();\n    };\n\n    this.addCardToState = async () => {\n      const response = await Axios.get('https://tasks-8f93f.firebaseio.com/cards.json');\n      const lastKey = Object.keys(response.data)[Object.keys(response.data).length - 1];\n      console.log(lastKey);\n      this.setState(({\n        keys\n      }) => {\n        const newArr = [...keys, lastKey];\n        return {\n          keys: newArr\n        };\n      });\n    };\n  }\n\n  createCard() {\n    return {\n      title: '',\n      subtitle: '',\n      id: this.maxId++\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await Axios.get('https://tasks-8f93f.firebaseio.com/cards.json');\n      const cards = [];\n      const keys = [];\n      Object.keys(response.data).forEach(key => {\n        cards.push(this.createCard());\n        keys.push(key);\n      });\n      this.setState({\n        cards\n      });\n      this.setState({\n        keys\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, this.state.keys.map(key => {\n      return /*#__PURE__*/React.createElement(Card, {\n        name: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      });\n    }), /*#__PURE__*/React.createElement(AddCard, {\n      addCard: this.addCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Main/Main.js"],"names":["React","Component","Card","AddCard","Axios","Main","maxId","state","cards","keys","addTask","text","newItem","createTask","setState","items","newArr","post","props","name","addCard","newCard","createCard","addCardToState","response","get","lastKey","Object","data","length","console","log","title","subtitle","id","componentDidMount","forEach","key","push","e","render","map"],"mappings":"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","sourcesContent":["// Контейнер для отображения элементов карточек с задачами\nimport React, {Component} from 'react'\nimport './Main.scss'\nimport Card from '../../components/Card/Card'\nimport AddCard from '../../components/AddCard/AddCard'\nimport Axios from 'axios'\n\nexport default class Main extends Component{\n    maxId = 1000\n\n    state = {\n        cards: [],\n        keys: []\n    }\n\n    createCard() {\n        return {\n            title: '',\n            subtitle: '',\n            id: this.maxId++,\n        }\n    }\n\n    addTask = (text) => {\n        const newItem = this.createTask(text);\n        this.setState(({ items }) => {\n            const newArr = [\n                ...items,\n                newItem\n            ];\n\n            return {\n                items: newArr\n            }\n        })\n        Axios.post(`https://tasks-8f93f.firebaseio.com/cards/${this.props.name}/tasks.json`, newItem)\n    };\n\n    addCard = () => {\n        const newCard = this.createCard();\n        this.setState(({ cards }) => {\n            const newArr = [\n                ...cards,\n                newCard\n            ];\n            return {\n                cards: newArr\n            }\n        })\n        Axios.post('https://tasks-8f93f.firebaseio.com/cards.json', newCard)\n        this.addCardToState()\n    };\n\n    addCardToState = async () => {\n        const response = await Axios.get('https://tasks-8f93f.firebaseio.com/cards.json')\n        const lastKey = Object.keys(response.data)[Object.keys(response.data).length - 1]\n        console.log(lastKey)\n        this.setState(({ keys }) => {\n            const newArr = [\n                ...keys,\n                lastKey\n            ];\n            return {\n                keys: newArr\n            }\n        })\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await Axios.get('https://tasks-8f93f.firebaseio.com/cards.json')\n            const cards = []\n            const keys = []\n            Object.keys(response.data).forEach((key) => {\n                cards.push(this.createCard())\n                keys.push(key)\n            })\n\n            this.setState({\n                cards\n            })\n\n            this.setState({\n                keys\n            })\n\n        } catch (e) {\n            console.log(e)\n        }\n    }  \n\n\n    render() {\n        return (\n            <div className='Main'>\n                {this.state.keys.map((key) => {\n                    return(\n                        <Card name={key} />\n                    )\n                })}\n                <AddCard addCard={this.addCard} />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}