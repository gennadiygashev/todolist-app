{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport Menu from './containers/Menu/Menu.js';\nimport Main from './containers/Main/Main.js';\nimport Axios from './axios/axios-folders';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      folders: [],\n      currentCards: [],\n      activeFolderKey: false\n    };\n\n    this.addExample = () => {\n      const newFolder = this.autoExample();\n      Axios.post(`/folders.json`, newFolder).then(function (res) {\n        const folderKey = Object.values(res.data)[0];\n        newFolder.key = folderKey;\n        Axios.patch(`/folders/${folderKey}.json`, {\n          'key': folderKey\n        });\n      });\n      this.setState(({\n        folders\n      }) => {\n        const newArr = [...folders, newFolder];\n        return {\n          folders: newArr\n        };\n      });\n    };\n\n    this.addFolder = text => {\n      const newFolder = this.createFolder(text);\n      Axios.post(`/folders.json`, newFolder).then(function (res) {\n        const folderKey = Object.values(res.data)[0];\n        newFolder.key = folderKey;\n        Axios.patch(`/folders/${folderKey}.json`, {\n          'key': folderKey\n        });\n      });\n      this.setState(({\n        folders\n      }) => {\n        const newArr = [...folders, newFolder];\n        return {\n          folders: newArr\n        };\n      });\n    };\n\n    this.deleteFolder = id => {\n      this.setState(({\n        folders\n      }) => {\n        const idx = folders.findIndex(el => el.id === id);\n        const newArray = [...folders.slice(0, idx), ...folders.slice(idx + 1)];\n        return {\n          folders: newArray\n        };\n      });\n    };\n\n    this.onSelectFolder = async key => {\n      this.setState({\n        currentCards: []\n      });\n      this.setState({\n        activeFolderKey: key\n      });\n\n      try {\n        const response = await Axios.get(`/folders/${this.state.activeFolderKey}/cards.json`);\n        const currentCards = [];\n        Object.values(response.data).forEach(card => {\n          currentCards.push(card);\n        });\n        this.setState({\n          currentCards\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.addCard = () => {\n      const newCard = this.createCard();\n      const activeFolder = this.state.activeFolderKey;\n      Axios.post(`/folders/${activeFolder}/cards.json`, newCard).then(function (res) {\n        const cardKey = Object.values(res.data)[0];\n        newCard.key = cardKey;\n        Axios.patch(`/folders/${activeFolder}/cards/${cardKey}.json`, {\n          'key': cardKey\n        });\n      });\n      this.setState(({\n        currentCards\n      }) => {\n        const newArr = [...currentCards, newCard];\n        return {\n          currentCards: newArr\n        };\n      });\n    };\n\n    this.deleteCard = id => {\n      console.log(id);\n    };\n  }\n\n  //\n  createFolder(name) {\n    return {\n      name\n    };\n  }\n\n  autoExample() {\n    return {\n      name: 'Auto Gen',\n      cards: this.createCard()\n    };\n  }\n\n  //\n  createCard() {\n    return {\n      title: '',\n      subtitle: ''\n    };\n  }\n\n  //\n  //\n  async componentDidMount() {\n    try {\n      const responseFolders = await Axios.get('/folders.json');\n      const folders = [];\n\n      if (responseFolders.data === null) {\n        folders.push(this.addFolder('Auto gen'));\n      } else {\n        Object.values(responseFolders.data).forEach(folder => {\n          folders.push(folder);\n        });\n      }\n\n      this.setState({\n        folders\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      folders: this.state.folders,\n      addFolder: this.addFolder,\n      deleteFolder: this.deleteFolder,\n      onSelectFolder: this.onSelectFolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 6\n      }\n    }, this.state.activeFolderKey ? /*#__PURE__*/React.createElement(Main, {\n      addCard: this.addCard,\n      cards: this.state.currentCards,\n      deleteCard: this.deleteCard,\n      addTask: this.addTask,\n      deleteTask: this.deleteTask,\n      onToggleImportant: this.onToggleImportant,\n      activeFolderKey: this.state.activeFolderKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, \"Select Directory\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/App.js"],"names":["React","Component","Menu","Main","Axios","App","state","folders","currentCards","activeFolderKey","addExample","newFolder","autoExample","post","then","res","folderKey","Object","values","data","key","patch","setState","newArr","addFolder","text","createFolder","deleteFolder","id","idx","findIndex","el","newArray","slice","onSelectFolder","response","get","forEach","card","push","e","console","log","addCard","newCard","createCard","activeFolder","cardKey","deleteCard","name","cards","title","subtitle","componentDidMount","responseFolders","folder","render","addTask","deleteTask","onToggleImportant"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport Menu from './containers/Menu/Menu.js'\nimport Main from './containers/Main/Main.js'\nimport Axios from './axios/axios-folders'\n\n\nexport default class App extends Component { \n  state = {\n    folders: [],\n    currentCards: [],\n    activeFolderKey: false\n  }\n\n  //\n  \n  createFolder(name) {\n    return {\n      name\n    }\n  }\n\n  autoExample() {\n    return {\n      name: 'Auto Gen',\n      cards: this.createCard()\n    }\n  }\n\n  addExample = () => {\n    const newFolder = this.autoExample();\n    Axios.post(`/folders.json`, newFolder)\n    .then(function (res) {\n      const folderKey = ((Object.values(res.data))[0])\n      newFolder.key = folderKey\n      Axios.patch(`/folders/${folderKey}.json`, {'key': folderKey})\n    })\n    this.setState(({ folders }) => {\n      const newArr = [\n        ...folders,\n        newFolder\n      ];\n      return {\n        folders: newArr\n      }\n    })\n  }\n\n  addFolder = (text) => {\n    const newFolder = this.createFolder(text);\n    Axios.post(`/folders.json`, newFolder)\n    .then(function (res) {\n      const folderKey = ((Object.values(res.data))[0])\n      newFolder.key = folderKey\n      Axios.patch(`/folders/${folderKey}.json`, {'key': folderKey})\n    })\n    this.setState(({ folders }) => {\n      const newArr = [\n        ...folders,\n        newFolder\n      ];\n      return {\n        folders: newArr\n      }\n    })\n  }\n\n  deleteFolder = (id) => {\n    this.setState(({ folders }) => {\n      const idx = folders.findIndex((el) => el.id === id);\n      const newArray = [\n        ...folders.slice(0, idx),\n        ...folders.slice(idx + 1)\n      ]\n      return {\n        folders: newArray\n      }\n    })\n  }\n\n  onSelectFolder = async (key) => {\n    this.setState({\n      currentCards: []\n    })\n    this.setState({\n      activeFolderKey: key\n    })\n    try {\n      const response = await Axios.get(`/folders/${this.state.activeFolderKey}/cards.json`)\n      const currentCards = []\n      Object.values(response.data).forEach((card) => {\n        currentCards.push(card)\n      })\n      this.setState({\n        currentCards\n      })\n    } catch (e) {\n        console.log(e)\n    }\n  }\n  \n  //\n\n  createCard() {\n    return {\n        title: '',\n        subtitle: '',\n    }\n  }\n\n  addCard = () => {\n    const newCard = this.createCard();\n    const activeFolder = this.state.activeFolderKey\n    Axios.post(`/folders/${activeFolder}/cards.json`, newCard)\n    .then(function (res) {\n      const cardKey = ((Object.values(res.data))[0])\n      newCard.key = cardKey\n      Axios.patch(`/folders/${activeFolder}/cards/${cardKey}.json`, {'key': cardKey})\n    })\n    this.setState(({ currentCards }) => {\n      const newArr = [\n        ...currentCards,\n        newCard\n      ];\n      return {\n        currentCards: newArr\n      }\n    })\n  }\n\n  deleteCard = (id) => {\n    console.log(id)\n  }\n\n  //\n\n\n\n  //\n\n  async componentDidMount() {\n    try {      \n      const responseFolders = await Axios.get('/folders.json')\n      const folders = []\n      if (responseFolders.data === null) {\n        folders.push(this.addFolder('Auto gen'))\n      } else {\n        Object.values(responseFolders.data).forEach((folder) => {\n          folders.push(folder)\n        })  \n      }\n\n\n      this.setState({\n        folders\n      }) \n\n    } catch (e) {\n      console.log(e)\n    }\n  }\n   \n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-2'>\n            <Menu \n              folders={this.state.folders} \n              addFolder={this.addFolder}\n              deleteFolder={this.deleteFolder}\n              onSelectFolder={this.onSelectFolder}\n            />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-10'>\n            {\n              this.state.activeFolderKey ?\n              <Main \n                addCard={this.addCard}\n                cards={this.state.currentCards}\n                deleteCard={this.deleteCard}\n                addTask={this.addTask}\n                deleteTask={this.deleteTask}\n                onToggleImportant={this.onToggleImportant}\n                activeFolderKey={this.state.activeFolderKey}\n              /> :\n              <h1>Select Directory</h1>\n            }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}