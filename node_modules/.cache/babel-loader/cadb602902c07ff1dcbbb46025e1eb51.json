{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js\";\n// Контейнер для панели коллекции папок\nimport React, { useState, useEffect } from 'react';\nimport Axios from '../../axios/axios-folders';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core/';\nimport AddFolder from '../../components/UI/AddFolder/AddFolder';\nimport Folder from '../../components/UI/Folder/Folder';\nexport default function MenuT() {\n  const [data, setData] = useState({\n    folders: []\n  });\n\n  const createFolder = name => {\n    return {\n      name\n    };\n  };\n\n  const deleteFolder = key => {\n    Axios.delete(`/folders/${key}.json`);\n    setData(({\n      folders\n    }) => {\n      const idx = data.folders.findIndex(el => el.key === key);\n      const newArr = [...folders.slice(0, idx), ...folders.slice(idx + 1)];\n      return {\n        folders: newArr\n      };\n    });\n  };\n\n  const changeTitle = (value, key) => {\n    const idx = data.folders.findIndex(el => el.key === key);\n    const oldItem = data.folders[idx];\n    const newItem = { ...oldItem,\n      ['name']: value\n    };\n    setData(({\n      folders\n    }) => {});\n  };\n\n  const onToggleImportant = taskID => {\n    const idx = data.tasks.findIndex(el => el.key === taskID);\n    const oldItem = data.tasks[idx];\n    const newItem = { ...oldItem,\n      ['important']: !oldItem['important']\n    };\n    const activeFolderKey = props.activeFolderKey;\n    const cardKey = props.cardID;\n    const taskKey = taskID;\n    Axios.patch(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${taskKey}.json`, {\n      'important': newItem.important\n    });\n    setData(({\n      tasks\n    }) => {\n      return {\n        tasks: toggleProperty(tasks, taskID, 'important')\n      };\n    });\n  };\n\n  const addFolder = async text => {\n    const newFolder = createFolder(text);\n    await Axios.post(`/folders.json`, newFolder).then(function (res) {\n      const folderKey = Object.values(res.data)[0];\n      newFolder.key = folderKey;\n      Axios.patch(`/folders/${folderKey}.json`, {\n        'key': folderKey\n      });\n    });\n    setData(({\n      folders\n    }) => {\n      const newArr = [...folders, newFolder];\n      return {\n        folders: newArr\n      };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responseFolders = await Axios.get('/folders.json');\n        const folders = [];\n        Object.values(responseFolders.data).forEach(folder => {\n          folders.push(folder);\n        });\n        setData({\n          folders\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, data.folders.map(item => /*#__PURE__*/React.createElement(Folder, {\n    name: item.name,\n    folderID: item.key,\n    deleteFolder: deleteFolder,\n    changeTitle: changeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateNewFolderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(AddFolder, {\n      text: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\",\n      onItemAdded: addFolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js"],"names":["React","useState","useEffect","Axios","CreateNewFolderIcon","ListItem","ListItemIcon","ListItemText","Divider","AddFolder","Folder","MenuT","data","setData","folders","createFolder","name","deleteFolder","key","delete","idx","findIndex","el","newArr","slice","changeTitle","value","oldItem","newItem","onToggleImportant","taskID","tasks","activeFolderKey","props","cardKey","cardID","taskKey","patch","important","toggleProperty","addFolder","text","newFolder","post","then","res","folderKey","Object","values","fetchData","responseFolders","get","forEach","folder","push","e","console","log","map","item"],"mappings":"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","sourcesContent":["// Контейнер для панели коллекции папок\nimport React, { useState, useEffect } from 'react'\nimport Axios from '../../axios/axios-folders'\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core/'\nimport AddFolder from '../../components/UI/AddFolder/AddFolder'\nimport Folder from '../../components/UI/Folder/Folder'\n\nexport default function MenuT() {\n  const [data, setData] = useState({ folders: [] })\n\n  const createFolder = (name) => {\n    return {\n      name\n    }\n  }\n\n  const deleteFolder = (key) => {\n    Axios.delete(`/folders/${key}.json`)\n    setData(({ folders }) => {\n      const idx = data.folders.findIndex((el) => el.key === key);\n      const newArr = [\n        ...folders.slice(0, idx),\n        ...folders.slice(idx + 1)\n      ]\n      return {\n        folders: newArr\n      }\n    })\n  }\n\n  const changeTitle = (value, key) => {\n    const idx = data.folders.findIndex((el) => el.key === key);\n    const oldItem = data.folders[idx];\n    const newItem = {...oldItem,\n      ['name']: value\n    }\n    setData(({ folders }) => {\n      \n    })\n  }\n\n  const onToggleImportant = (taskID) => {\n    const idx = data.tasks.findIndex((el) => el.key === taskID);\n    const oldItem = data.tasks[idx];\n    const newItem = {...oldItem,\n      ['important']: !oldItem['important']\n    }\n    const activeFolderKey = props.activeFolderKey\n    const cardKey = props.cardID\n    const taskKey = taskID\n    Axios.patch(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${taskKey}.json`, {'important': newItem.important})\n    setData(({ tasks }) => {\n      return {\n        tasks: toggleProperty(tasks, taskID, 'important')\n      }\n    })\n  }\n\n  const addFolder = async (text) => {\n    const newFolder = createFolder(text);\n    await Axios.post(`/folders.json`, newFolder)\n    .then(function (res) {\n      const folderKey = ((Object.values(res.data))[0])\n      newFolder.key = folderKey\n      Axios.patch(`/folders/${folderKey}.json`, {'key': folderKey})\n    })\n    setData(({ folders }) => {\n      const newArr = [\n        ...folders,\n        newFolder\n      ];\n      return {\n        folders: newArr\n      }\n    })\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {      \n        const responseFolders = await Axios.get('/folders.json')\n        const folders = []\n        Object.values(responseFolders.data).forEach((folder) => {\n          folders.push(folder)\n        })  \n        setData({\n          folders\n        }) \n      } catch (e) {\n        console.log(e)\n      }  \n    }\n    fetchData()\n  }, [])\n\n\n  return(\n    <>\n      {data.folders.map((item) => (\n        <Folder \n          name={item.name}\n          folderID={item.key}\n          deleteFolder={deleteFolder}\n          changeTitle={changeTitle}\n        />\n      ))}\n      <Divider />\n      <ListItem>\n        <ListItemIcon><CreateNewFolderIcon /></ListItemIcon>\n        <ListItemText primary={\n          <AddFolder \n            text='Новая папка' \n            onItemAdded={addFolder}\n          />       \n        }/>\n      </ListItem>\n    </>\n  )     \n}\n\n\n"]},"metadata":{},"sourceType":"module"}