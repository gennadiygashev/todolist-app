{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js\";\n// Контейнер для панели коллекции папок\nimport React, { useState, useEffect } from 'react';\nimport Axios from '../../axios/axios-folders';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core/';\nimport { Link } from 'react-router-dom';\nimport AddFolder from '../../components/UI/AddFolder/AddFolder';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nexport default function MenuT() {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [data, setData] = useState({\n    folders: []\n  });\n\n  const createFolder = name => {\n    return {\n      name\n    };\n  };\n\n  const deleteFolder = id => {\n    Axios.delete(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${key}.json`);\n    setData(folders => {\n      const idx = folders.findIndex(el => el.id === id);\n      const newArray = [...folders.slice(0, idx), ...folders.slice(idx + 1)];\n      return {\n        folders: newArray\n      };\n    });\n  };\n\n  const addFolder = async text => {\n    const newFolder = createFolder(text);\n    await Axios.post(`/folders.json`, newFolder).then(function (res) {\n      const folderKey = Object.values(res.data)[0];\n      newFolder.key = folderKey;\n      Axios.patch(`/folders/${folderKey}.json`, {\n        'key': folderKey\n      });\n    });\n    setData(({\n      folders\n    }) => {\n      const newArr = [...folders, newFolder];\n      return {\n        folders: newArr\n      };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responseFolders = await Axios.get('/folders.json');\n        const folders = [];\n        Object.values(responseFolders.data).forEach(folder => {\n          folders.push(folder);\n        });\n        setData({\n          folders\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, data.folders.map(item => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: item.key,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/folders/${item.key}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: 1,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FolderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Link, {\n    to: `/folders/${item.key}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-controls\": item.name,\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Menu, {\n    id: item.name,\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"\\u041F\\u0435\\u0440\\u0435\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: deleteFolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateNewFolderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(AddFolder, {\n      text: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\",\n      onItemAdded: addFolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js"],"names":["React","useState","useEffect","Axios","FolderIcon","CreateNewFolderIcon","ListItem","ListItemIcon","ListItemText","Divider","Link","AddFolder","Badge","IconButton","Menu","MenuItem","MoreHorizIcon","MenuT","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","data","setData","folders","createFolder","name","deleteFolder","id","delete","activeFolderKey","cardKey","key","idx","findIndex","el","newArray","slice","addFolder","text","newFolder","post","then","res","folderKey","Object","values","patch","newArr","fetchData","responseFolders","get","forEach","folder","push","e","console","log","map","item","Boolean"],"mappings":"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","sourcesContent":["// Контейнер для панели коллекции папок\nimport React, { useState, useEffect } from 'react'\nimport Axios from '../../axios/axios-folders'\nimport FolderIcon from '@material-ui/icons/Folder';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core/'\nimport { Link } from 'react-router-dom'\nimport AddFolder from '../../components/UI/AddFolder/AddFolder'\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nexport default function MenuT() {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  \n  const [data, setData] = useState({ folders: [] })\n\n  const createFolder = (name) => {\n    return {\n      name\n    }\n  }\n\n  const deleteFolder = (id) => {\n    Axios.delete(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${key}.json`)\n    setData((folders) => {\n      const idx = folders.findIndex((el) => el.id === id);\n      const newArray = [\n        ...folders.slice(0, idx),\n        ...folders.slice(idx + 1)\n      ]\n      return {\n        folders: newArray\n      }\n    })\n  }\n\n  const addFolder = async (text) => {\n    const newFolder = createFolder(text);\n    await Axios.post(`/folders.json`, newFolder)\n    .then(function (res) {\n      const folderKey = ((Object.values(res.data))[0])\n      newFolder.key = folderKey\n      Axios.patch(`/folders/${folderKey}.json`, {'key': folderKey})\n    })\n    setData(({ folders }) => {\n      const newArr = [\n        ...folders,\n        newFolder\n      ];\n      return {\n        folders: newArr\n      }\n    })\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {      \n        const responseFolders = await Axios.get('/folders.json')\n        const folders = []\n        Object.values(responseFolders.data).forEach((folder) => {\n          folders.push(folder)\n        })  \n        setData({\n          folders\n        }) \n      } catch (e) {\n        console.log(e)\n      }  \n    }\n    fetchData()\n  }, [])\n\n\n  return(\n    <>\n      {data.folders.map((item) => (\n        <>\n          <ListItem button key={item.key} onClick={handleClick}>\n            <Link to={`/folders/${item.key}`}>\n              <ListItemIcon>\n                <Badge badgeContent={1} color=\"primary\">\n                  <FolderIcon />\n                </Badge>\n              </ListItemIcon>\n            </Link>\n            <Link to={`/folders/${item.key}`}>\n              <ListItemText primary={item.name} />\n            </Link>\n            <IconButton aria-controls={item.name} aria-haspopup=\"true\" onClick={handleClick}>\n              <MoreHorizIcon />\n            </IconButton>\n          </ListItem>\n          <Menu\n            id={item.name}\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleClose}>Переименовать</MenuItem>\n            <MenuItem onClick={deleteFolder}>Удалить</MenuItem>\n          </Menu>\n        </> \n      ))}\n      <Divider />\n      <ListItem>\n        <ListItemIcon><CreateNewFolderIcon /></ListItemIcon>\n        <ListItemText primary={\n          <AddFolder \n            text='Новая папка' \n            onItemAdded={addFolder}\n          />       \n        }/>\n      </ListItem>\n    </>\n  )     \n}\n\n\n"]},"metadata":{},"sourceType":"module"}