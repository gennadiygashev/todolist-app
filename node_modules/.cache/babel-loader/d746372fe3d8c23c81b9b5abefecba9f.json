{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js\";\n// Контейнер для панели коллекции папок\nimport React, { useState, useEffect } from 'react';\nimport Axios from '../../axios/axios-folders';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core/';\nimport { Link } from 'react-router-dom';\nimport AddFolder from '../../components/UI/AddFolder/AddFolder';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Badge from '@material-ui/core/Badge';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\nexport default function Menu() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const [data, setData] = useState({\n    folders: []\n  });\n\n  const createFolder = name => {\n    return {\n      name\n    };\n  }; // const deleteFolder = (id) => {\n  //   setData((folders) => {\n  //     const idx = folders.findIndex((el) => el.id === id);\n  //     const newArray = [\n  //       ...folders.slice(0, idx),\n  //       ...folders.slice(idx + 1)\n  //     ]\n  //     return {\n  //       folders: newArray\n  //     }\n  //   })\n  // }\n\n\n  const addFolder = async text => {\n    const newFolder = createFolder(text);\n    await Axios.post(`/folders.json`, newFolder).then(function (res) {\n      const folderKey = Object.values(res.data)[0];\n      newFolder.key = folderKey;\n      Axios.patch(`/folders/${folderKey}.json`, {\n        'key': folderKey\n      });\n    });\n    setData(({\n      folders\n    }) => {\n      const newArr = [...folders, newFolder];\n      return {\n        folders: newArr\n      };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responseFolders = await Axios.get('/folders.json');\n        const folders = [];\n        Object.values(responseFolders.data).forEach(folder => {\n          folders.push(folder);\n        });\n        setData({\n          folders\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, data.folders.map(item => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: item.key,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/folders/${item.key}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: 1,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FolderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })), open ? /*#__PURE__*/React.createElement(ExpandLess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(ExpandMore, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 40\n    }\n  })), /*#__PURE__*/React.createElement(Collapse, {\n    in: open,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"div\",\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    className: classes.nested,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StarBorder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Starred\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateNewFolderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(AddFolder, {\n      text: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\",\n      onItemAdded: addFolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js"],"names":["React","useState","useEffect","Axios","FolderIcon","CreateNewFolderIcon","ListItem","ListItemIcon","ListItemText","Divider","Link","AddFolder","MoreVertIcon","Badge","Collapse","InboxIcon","DraftsIcon","SendIcon","ExpandLess","ExpandMore","StarBorder","makeStyles","ListSubheader","List","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","Menu","classes","open","setOpen","handleClick","data","setData","folders","createFolder","name","addFolder","text","newFolder","post","then","res","folderKey","Object","values","key","patch","newArr","fetchData","responseFolders","get","forEach","folder","push","e","console","log","map","item"],"mappings":"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","sourcesContent":["// Контейнер для панели коллекции папок\nimport React, { useState, useEffect } from 'react'\nimport Axios from '../../axios/axios-folders'\nimport FolderIcon from '@material-ui/icons/Folder';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core/'\nimport { Link } from 'react-router-dom'\nimport AddFolder from '../../components/UI/AddFolder/AddFolder'\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Badge from '@material-ui/core/Badge';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nexport default function Menu() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  \n  const [data, setData] = useState({ folders: [] })\n\n  const createFolder = (name) => {\n    return {\n      name\n    }\n  }\n\n  // const deleteFolder = (id) => {\n  //   setData((folders) => {\n  //     const idx = folders.findIndex((el) => el.id === id);\n  //     const newArray = [\n  //       ...folders.slice(0, idx),\n  //       ...folders.slice(idx + 1)\n  //     ]\n  //     return {\n  //       folders: newArray\n  //     }\n  //   })\n  // }\n\n  const addFolder = async (text) => {\n    const newFolder = createFolder(text);\n    await Axios.post(`/folders.json`, newFolder)\n    .then(function (res) {\n      const folderKey = ((Object.values(res.data))[0])\n      newFolder.key = folderKey\n      Axios.patch(`/folders/${folderKey}.json`, {'key': folderKey})\n    })\n    setData(({ folders }) => {\n      const newArr = [\n        ...folders,\n        newFolder\n      ];\n      return {\n        folders: newArr\n      }\n    })\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {      \n        const responseFolders = await Axios.get('/folders.json')\n        const folders = []\n        Object.values(responseFolders.data).forEach((folder) => {\n          folders.push(folder)\n        })  \n        setData({\n          folders\n        }) \n      } catch (e) {\n        console.log(e)\n      }  \n    }\n    fetchData()\n  }, [])\n\n\n  return(\n    <>\n      {data.folders.map((item) => (\n        <>\n          <ListItem button key={item.key} onClick={handleClick}>\n            <Link to={`/folders/${item.key}`}>\n              <ListItemIcon>\n                <Badge badgeContent={1} color=\"primary\">\n                  <FolderIcon />\n                </Badge>\n              </ListItemIcon>\n              <ListItemText primary={item.name} />\n            </Link>\n              {open ? <ExpandLess /> : <ExpandMore />}            \n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem button className={classes.nested}>\n              <ListItemIcon>\n                <StarBorder />\n              </ListItemIcon>\n              <ListItemText primary=\"Starred\" />\n            </ListItem>\n          </List>\n        </Collapse>     \n      </> \n      ))}\n      <Divider />\n      <ListItem>\n        <ListItemIcon><CreateNewFolderIcon /></ListItemIcon>\n        <ListItemText primary={\n          <AddFolder \n            text='Новая папка' \n            onItemAdded={addFolder}\n          />       \n        }/>\n      </ListItem>\n    </>\n  )     \n}\n\n\n"]},"metadata":{},"sourceType":"module"}