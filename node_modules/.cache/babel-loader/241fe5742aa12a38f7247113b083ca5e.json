{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport Menu from './containers/Menu/Menu.js';\nimport Main from './containers/Main/Main.js';\nimport Axios from './axios/axios-folders';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      folders: [],\n      currentCards: [],\n      activeFolderKey: ''\n    };\n\n    this.addCard = () => {\n      const newCard = this.createCard();\n      const activeFolder = this.state.activeFolderKey;\n      Axios.post(`/folders/${activeFolder}/cards.json`, newCard).then(function (res) {\n        const cardKey = Object.values(res.data)[0];\n        newCard.key = cardKey;\n        Axios.patch(`/folders/${activeFolder}/cards/${cardKey}.json`, {\n          'key': cardKey\n        });\n      });\n      this.setState(({\n        currentCards\n      }) => {\n        const newArr = [...currentCards, newCard];\n        return {\n          currentCards: newArr\n        };\n      });\n    };\n\n    this.deleteCard = id => {\n      console.log(id);\n    };\n\n    this.deleteFolder = id => {\n      this.setState(({\n        folders\n      }) => {\n        const idx = folders.findIndex(el => el.id === id);\n        const newArray = [...folders.slice(0, idx), ...folders.slice(idx + 1)];\n        return {\n          folders: newArray\n        };\n      });\n    };\n\n    this.onSelectFolder = async key => {\n      this.setState({\n        currentCards: []\n      });\n      this.setState({\n        activeFolderKey: key\n      });\n\n      try {\n        const response = await Axios.get(`/folders/${this.state.activeFolderKey}/cards.json`);\n        console.log(response);\n        const currentCards = [];\n        Object.values(response.data).forEach(card => {\n          currentCards.push(card);\n        });\n        this.setState({\n          currentCards\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        items\n      }) => {\n        return {\n          items: this.toggleProperty(items, id, 'important')\n        };\n      });\n    };\n\n    this.addTask = text => {\n      const newItem = this.createTask(text);\n      this.setState(({\n        items\n      }) => {\n        const newArr = [...items, newItem];\n        return {\n          items: newArr\n        };\n      });\n      Axios.post(`/folders/${activeFolder}/cards/${cardKey}/tasks.json`, newItem);\n    };\n\n    this.deleteTask = id => {\n      this.setState(({\n        items\n      }) => {\n        const idx = items.findIndex(el => el.id === id);\n        const newArr = [...items.slice(0, idx), ...items.slice(idx + 1)];\n        return {\n          items: newArr\n        };\n      });\n    };\n  }\n\n  createTask(name) {\n    return {\n      name,\n      important: false,\n      done: false\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await Axios.get('/folders.json');\n      const folders = [];\n      Object.values(response.data).forEach(folder => {\n        folders.push(folder);\n      });\n      this.setState({\n        folders\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      folders: this.state.folders,\n      addFolder: this.addFolder,\n      deleteFolder: this.deleteFolder,\n      onSelectFolder: this.onSelectFolder,\n      addTask: this.addTask,\n      deleteTask: this.deleteTask,\n      onToggleImportant: this.onToggleImportant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Main, {\n      addCard: this.addCard,\n      cards: this.state.currentCards,\n      deleteCard: this.deleteCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/App.js"],"names":["React","Component","Menu","Main","Axios","App","state","folders","currentCards","activeFolderKey","addCard","newCard","createCard","activeFolder","post","then","res","cardKey","Object","values","data","key","patch","setState","newArr","deleteCard","id","console","log","deleteFolder","idx","findIndex","el","newArray","slice","onSelectFolder","response","get","forEach","card","push","e","onToggleImportant","items","toggleProperty","addTask","text","newItem","createTask","deleteTask","name","important","done","arr","propName","oldItem","componentDidMount","folder","render","addFolder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport Menu from './containers/Menu/Menu.js'\nimport Main from './containers/Main/Main.js'\nimport Axios from './axios/axios-folders'\n\n\nexport default class App extends Component { \n  state = {\n    folders: [],\n    currentCards: [],\n    activeFolderKey: ''\n\t}\n\n\n\n\n\n\n  addCard = () => {\n    const newCard = this.createCard();\n    const activeFolder = this.state.activeFolderKey\n    Axios.post(`/folders/${activeFolder}/cards.json`, newCard)\n    .then(function (res) {\n      const cardKey = ((Object.values(res.data))[0])\n      newCard.key = cardKey\n      Axios.patch(`/folders/${activeFolder}/cards/${cardKey}.json`, {'key': cardKey})\n    })\n    this.setState(({ currentCards }) => {\n        const newArr = [\n            ...currentCards,\n            newCard\n        ];\n        return {\n          currentCards: newArr\n        }\n    })\n  };\n\n\n  deleteCard = (id) => {\n    console.log(id)\n  }\n\n\n\n    deleteFolder = (id) => {\n        this.setState(({ folders }) => {\n            const idx = folders.findIndex((el) => el.id === id);\n            const newArray = [\n                ...folders.slice(0, idx),\n                ...folders.slice(idx + 1)\n            ];\n            return {\n                folders: newArray\n            }\n        })\n    };\n\n    onSelectFolder = async (key) => {\n      this.setState({\n        currentCards: []\n      })\n      this.setState({\n        activeFolderKey: key\n      })\n      try {\n        const response = await Axios.get(`/folders/${this.state.activeFolderKey}/cards.json`)\n        console.log(response)\n        const currentCards = []\n        Object.values(response.data).forEach((card) => {\n          currentCards.push(card)\n        })\n\n        this.setState({\n            currentCards\n        })\n\n    } catch (e) {\n        console.log(e)\n  }}\n\n  onToggleImportant = (id) => {\n    this.setState(({ items }) => {\n        return {\n            items: this.toggleProperty(items, id, 'important')\n        }\n    });\n};\n\ncreateTask(name) {\n  return {\n      name,\n      important: false,\n      done: false,\n  }\n}\n\naddTask = (text) => {\n  const newItem = this.createTask(text);\n  this.setState(({ items }) => {\n      const newArr = [\n          ...items,\n          newItem\n      ];\n      return {\n          items: newArr\n      }\n  })\n  Axios.post(`/folders/${activeFolder}/cards/${cardKey}/tasks.json`, newItem)\n};\n\n\ndeleteTask = (id) => {\n  this.setState(({ items }) => {\n      const idx = items.findIndex((el) => el.id === id);\n      const newArr = [\n          ...items.slice(0, idx),\n          ...items.slice(idx + 1)\n      ];\n      return {\n          items: newArr\n      }\n  })\n};\n\ntoggleProperty(arr, id, propName) {\n  const idx = arr.findIndex((el) => el.id === id);\n\n  const oldItem = arr[idx];\n  const newItem = {...oldItem,\n      [propName]: !oldItem[propName]};\n\n  return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1)\n  ];\n}\n\n\n    async componentDidMount() {\n      try {\n        const response = await Axios.get('/folders.json')\n        const folders = []\n\n        Object.values(response.data).forEach((folder) => {\n          folders.push(folder)\n        })\n    \n        this.setState({\n          folders\n        })\n    \n      } catch (e) {\n        console.log(e)\n      }\n    }\n   \n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-2'>\n            <Menu \n              folders={this.state.folders} \n              addFolder={this.addFolder}\n              deleteFolder={this.deleteFolder}\n              onSelectFolder={this.onSelectFolder}\n              addTask={this.addTask}\n              deleteTask={this.deleteTask}\n              onToggleImportant={this.onToggleImportant}\n\n            />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-10'>\n\t\t\t\t\t\t<Main \n              addCard={this.addCard}\n              cards={this.state.currentCards}\n              deleteCard={this.deleteCard}\n            />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}