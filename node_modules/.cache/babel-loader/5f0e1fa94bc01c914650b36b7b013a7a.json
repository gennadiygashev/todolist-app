{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Main/Main.js\";\n// Контейнер для отображения элементов карточек с задачами\nimport React, { Component } from 'react';\nimport './Main.scss';\nimport Card from '../../components/Card/Card';\nimport AddCard from '../../components/UI/AddCard/AddCard';\nimport Axios from '../../axios/axios-folders';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentCards: []\n    };\n\n    this.addCard = async () => {\n      console.log('Card 1');\n      const activeFolder = this.props.folderId;\n      const newCard = this.createCard();\n      await Axios.post(`/folders/${activeFolder}/cards.json`, newCard).then(function (res) {\n        console.log('Card 2');\n        const cardKey = Object.values(res.data)[0];\n        newCard.key = cardKey;\n        Axios.patch(`/folders/${activeFolder}/cards/${cardKey}.json`, {\n          'key': cardKey\n        });\n      });\n      this.setState(({\n        currentCards\n      }) => {\n        console.log('Card 3');\n        const newArr = [...currentCards, newCard];\n        return {\n          currentCards: newArr\n        };\n      });\n    };\n\n    this.onDeleteCard = keyx => {\n      const idx = this.state.currentCards.findIndex(el => el.keyx === keyx);\n      const activeFolderKey = this.props.activeFolderKey;\n      const cardKey = this.props.keyx;\n      Axios.delete(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${key}.json`);\n      this.setState(({\n        currentCards\n      }) => {\n        const newArr = [...currentCards.slice(0, idx), ...tasks.slice(idx + 1)];\n        return {\n          tasks: newArr\n        };\n      });\n    };\n  }\n\n  createCard() {\n    return {\n      title: '',\n      subtitle: ''\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const activeFolder = this.props.folderId;\n      const responseCards = await Axios.get(`/folders/${activeFolder}/cards.json`);\n      const currentCards = [];\n      Object.values(responseCards.data).forEach(card => {\n        currentCards.push(card);\n      });\n      this.setState({\n        currentCards\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, this.state.currentCards.map(card => {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: card.key,\n        keyx: card.key,\n        activeFolderKey: this.props.folderId,\n        title: card.title,\n        onDeleteCard: this.onDeleteCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      });\n    }), /*#__PURE__*/React.createElement(AddCard, {\n      addCard: this.addCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Main/Main.js"],"names":["React","Component","Card","AddCard","Axios","Main","state","currentCards","addCard","console","log","activeFolder","props","folderId","newCard","createCard","post","then","res","cardKey","Object","values","data","key","patch","setState","newArr","onDeleteCard","keyx","idx","findIndex","el","activeFolderKey","delete","slice","tasks","title","subtitle","componentDidMount","responseCards","get","forEach","card","push","e","render","map"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA4B;AAAA;AAAA;AAAA,SACzCK,KADyC,GACjC;AACNC,MAAAA,YAAY,EAAE;AADR,KADiC;;AAAA,SAYzCC,OAZyC,GAY/B,YAAY;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,YAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,QAAhC;AACA,YAAMC,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACA,YAAMX,KAAK,CAACY,IAAN,CAAY,YAAWL,YAAa,aAApC,EAAkDG,OAAlD,EACLG,IADK,CACA,UAAUC,GAAV,EAAe;AACnBT,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,cAAMS,OAAO,GAAKC,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACI,IAAlB,CAAD,CAA0B,CAA1B,CAAjB;AACAR,QAAAA,OAAO,CAACS,GAAR,GAAcJ,OAAd;AACAf,QAAAA,KAAK,CAACoB,KAAN,CAAa,YAAWb,YAAa,UAASQ,OAAQ,OAAtD,EAA8D;AAAC,iBAAOA;AAAR,SAA9D;AACD,OANK,CAAN;AAOA,WAAKM,QAAL,CAAc,CAAC;AAAElB,QAAAA;AAAF,OAAD,KAAsB;AAClCE,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,cAAMgB,MAAM,GAAG,CACb,GAAGnB,YADU,EAEbO,OAFa,CAAf;AAIA,eAAO;AACLP,UAAAA,YAAY,EAAEmB;AADT,SAAP;AAGD,OATD;AAUD,KAjCwC;;AAAA,SAmCzCC,YAnCyC,GAmCzBC,IAAD,IAAU;AACvB,YAAMC,GAAG,GAAG,KAAKvB,KAAL,CAAWC,YAAX,CAAwBuB,SAAxB,CAAmCC,EAAD,IAAQA,EAAE,CAACH,IAAH,KAAYA,IAAtD,CAAZ;AACA,YAAMI,eAAe,GAAG,KAAKpB,KAAL,CAAWoB,eAAnC;AACA,YAAMb,OAAO,GAAG,KAAKP,KAAL,CAAWgB,IAA3B;AACAxB,MAAAA,KAAK,CAAC6B,MAAN,CAAc,YAAWD,eAAgB,UAASb,OAAQ,UAASI,GAAI,OAAvE;AACA,WAAKE,QAAL,CAAc,CAAC;AAAElB,QAAAA;AAAF,OAAD,KAAsB;AAClC,cAAMmB,MAAM,GAAG,CACb,GAAGnB,YAAY,CAAC2B,KAAb,CAAmB,CAAnB,EAAsBL,GAAtB,CADU,EAEb,GAAGM,KAAK,CAACD,KAAN,CAAYL,GAAG,GAAG,CAAlB,CAFU,CAAf;AAIA,eAAO;AACLM,UAAAA,KAAK,EAAET;AADF,SAAP;AAGD,OARD;AASD,KAjDwC;AAAA;;AAKzCX,EAAAA,UAAU,GAAG;AACX,WAAO;AACHqB,MAAAA,KAAK,EAAE,EADJ;AAEHC,MAAAA,QAAQ,EAAE;AAFP,KAAP;AAID;;AAyCD,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAM3B,YAAY,GAAG,KAAKC,KAAL,CAAWC,QAAhC;AACA,YAAM0B,aAAa,GAAG,MAAMnC,KAAK,CAACoC,GAAN,CAAW,YAAW7B,YAAa,aAAnC,CAA5B;AACA,YAAMJ,YAAY,GAAG,EAArB;AACAa,MAAAA,MAAM,CAACC,MAAP,CAAckB,aAAa,CAACjB,IAA5B,EAAkCmB,OAAlC,CAA2CC,IAAD,IAAU;AAClDnC,QAAAA,YAAY,CAACoC,IAAb,CAAkBD,IAAlB;AACD,OAFD;AAGA,WAAKjB,QAAL,CAAc;AACZlB,QAAAA;AADY,OAAd;AAID,KAXD,CAWE,OAAOqC,CAAP,EAAU;AACVnC,MAAAA,OAAO,CAACC,GAAR,CAAYkC,CAAZ;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKvC,KAAL,CAAWC,YAAX,CAAwBuC,GAAxB,CAA6BJ,IAAD,IAAU;AACrC,0BACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACnB,GADZ;AAEE,QAAA,IAAI,EAAEmB,IAAI,CAACnB,GAFb;AAGE,QAAA,eAAe,EAAE,KAAKX,KAAL,CAAWC,QAH9B;AAIE,QAAA,KAAK,EAAE6B,IAAI,CAACN,KAJd;AAKE,QAAA,YAAY,EAAE,KAAKT,YALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVA,CADH,eAYE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKnB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAgBD;;AArFwC","sourcesContent":["// Контейнер для отображения элементов карточек с задачами\nimport React, {Component} from 'react'\nimport './Main.scss'\nimport Card from '../../components/Card/Card'\nimport AddCard from '../../components/UI/AddCard/AddCard'\nimport Axios from '../../axios/axios-folders'\n\nexport default class Main extends Component{\n  state = {\n    currentCards: []\n  }\n\n  createCard() {\n    return {\n        title: '',\n        subtitle: '',\n    }\n  }\n\n  addCard = async () => {\n    console.log('Card 1')\n    const activeFolder = this.props.folderId\n    const newCard = this.createCard();\n    await Axios.post(`/folders/${activeFolder}/cards.json`, newCard)\n    .then(function (res) {\n      console.log('Card 2')\n      const cardKey = ((Object.values(res.data))[0])\n      newCard.key = cardKey\n      Axios.patch(`/folders/${activeFolder}/cards/${cardKey}.json`, {'key': cardKey})\n    })\n    this.setState(({ currentCards }) => {\n      console.log('Card 3')\n      const newArr = [\n        ...currentCards,\n        newCard\n      ];\n      return {\n        currentCards: newArr\n      }\n    })  \n  }\n\n  onDeleteCard = (keyx) => {\n    const idx = this.state.currentCards.findIndex((el) => el.keyx === keyx)\n    const activeFolderKey = this.props.activeFolderKey\n    const cardKey = this.props.keyx\n    Axios.delete(`/folders/${activeFolderKey}/cards/${cardKey}/tasks/${key}.json`)\n    this.setState(({ currentCards }) => {\n      const newArr = [\n        ...currentCards.slice(0, idx),\n        ...tasks.slice(idx + 1)\n      ]\n      return {\n        tasks: newArr\n      }\n    })\n  }\n\n  async componentDidMount() {\n    try {  \n      const activeFolder = this.props.folderId    \n      const responseCards = await Axios.get(`/folders/${activeFolder}/cards.json`)\n      const currentCards = []\n      Object.values(responseCards.data).forEach((card) => {\n        currentCards.push(card)\n      })  \n      this.setState({\n        currentCards\n      }) \n\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <div className='Main'>\n        {this.state.currentCards.map((card) => {\n          return(\n            <Card \n              key={card.key} \n              keyx={card.key} \n              activeFolderKey={this.props.folderId}\n              title={card.title}\n              onDeleteCard={this.onDeleteCard}\n            />\n          )\n        })}\n        <AddCard addCard={this.addCard} />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}