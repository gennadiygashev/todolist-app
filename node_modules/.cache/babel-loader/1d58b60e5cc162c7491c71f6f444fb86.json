{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/components/Card/Card.js\";\nimport React, { Component } from 'react';\nimport Checkbox from '../Checkbox/Checkbox';\nimport AddTask from '../AddTask/AddTask';\nimport './Card.scss';\nimport CardTitle from '../CardTitle/CardTitle';\nimport Axios from 'axios';\nexport default class Card extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      items: []\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        items\n      }) => {\n        const idx = items.findIndex(el => el.id === id);\n        const newArr = [...items.slice(0, idx), ...items.slice(idx + 1)];\n        return {\n          items: newArr\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        items\n      }) => {\n        return {\n          items: this.toggleProperty(items, id, 'important')\n        };\n      });\n    };\n  }\n\n  createTask(name) {\n    return {\n      name,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await Axios.get('https://tasks-8f93f.firebaseio.com/test.json');\n      const items = [];\n      Object.values(response.data).forEach(key => {\n        items.push(this.createTodoItem(key.name));\n      });\n      this.setState({\n        items\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TaskElement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), this.state.items.map(item => {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        name: item.name,\n        id: item.id,\n        important: item.important,\n        done: item.done,\n        onToggleImportant: this.onToggleImportant,\n        onDeleted: this.deleteItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      });\n    }), /*#__PURE__*/React.createElement(AddTask, {\n      text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\",\n      onItemAdded: this.props.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/components/Card/Card.js"],"names":["React","Component","Checkbox","AddTask","CardTitle","Axios","Card","maxId","state","items","deleteItem","id","setState","idx","findIndex","el","newArr","slice","onToggleImportant","toggleProperty","createTask","name","important","done","arr","propName","oldItem","newItem","componentDidMount","response","get","Object","values","data","forEach","key","push","createTodoItem","e","console","log","render","map","item","props","addTask"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Checkbox from '../Checkbox/Checkbox'\nimport AddTask from '../AddTask/AddTask'\nimport './Card.scss'\nimport CardTitle from '../CardTitle/CardTitle';\nimport Axios from 'axios';\n\nexport default class Card extends Component {\n    maxId = 100;\n\n    state = {\n        items: []\n    }\n    \n    createTask(name) {\n        return {\n            name,\n            important: false,\n            done: false,\n            id: this.maxId++\n        }\n    }\n\n    deleteItem = (id) => {\n        this.setState(({ items }) => {\n            const idx = items.findIndex((el) => el.id === id);\n            const newArr = [\n                ...items.slice(0, idx),\n                ...items.slice(idx + 1)\n            ];\n            return {\n                items: newArr\n            }\n        })\n    };\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        const oldItem = arr[idx];\n        const newItem = {...oldItem,\n            [propName]: !oldItem[propName]};\n\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ];\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await Axios.get('https://tasks-8f93f.firebaseio.com/test.json')\n            const items = []\n\n            Object.values(response.data).forEach((key) => {\n                items.push(this.createTodoItem(key.name))\n            })\n\n            this.setState({\n                items\n            })\n\n        } catch (e) {\n            console.log(e)\n        }\n    }  \n\n    onToggleImportant = (id) => {\n        this.setState(({ items }) => {\n            return {\n                items: this.toggleProperty(items, id, 'important')\n            }\n        });\n    };\n\n    render() {\n        return (\n            <div className='TaskElement'>\n                <CardTitle />\n                {this.state.items.map((item) => {\n                    return( \n                        <Checkbox\n                            name={item.name}\n                            id={item.id}\n                            important={item.important}\n                            done={item.done}\n                            onToggleImportant={this.onToggleImportant}\n                            onDeleted={ this.deleteItem }\n                        />   \n                    )                 \n                })}\n                <AddTask text='Добавить новую задачу' onItemAdded={this.props.addTask} />\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}