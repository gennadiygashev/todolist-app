{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/components/TaskElement/TaskElement.js\";\nimport React, { Component } from 'react';\nimport Checkbox from '../../components/Checkbox/Checkbox';\nimport AddTask from '../../components/AddTask/AddTask';\nimport './TaskElement.scss';\nexport default class TaskElement extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      items: [this.createTodoItem('Drink Coffee'), this.createTodoItem('Make Awesome App'), this.createTodoItem('Have a lunch')]\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        items\n      }) => {\n        const idx = items.findIndex(el => el.id === id);\n        const newArray = [...items.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        items\n      }) => {\n        const newArr = [...items, newItem];\n        return {\n          items: newArr\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        items\n      }) => {\n        return {\n          items: this.toggleProperty(items, id, 'important')\n        };\n      });\n    };\n  }\n\n  createTodoItem(value) {\n    return {\n      value,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TaskElement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\",\n      className: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\",\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), this.state.items.map(item => {\n      return /*#__PURE__*/React.createElement(Checkbox, {\n        value: item.value,\n        id: item.id,\n        important: item.important,\n        done: item.done,\n        onToggleImportant: this.onToggleImportant,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      });\n    }), /*#__PURE__*/React.createElement(AddTask, {\n      text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\",\n      onItemAdded: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/components/TaskElement/TaskElement.js"],"names":["React","Component","Checkbox","AddTask","TaskElement","maxId","state","items","createTodoItem","deleteItem","id","setState","idx","findIndex","el","newArray","slice","todoData","addItem","text","newItem","newArr","onToggleImportant","toggleProperty","value","important","done","arr","propName","oldItem","render","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Checkbox from '../../components/Checkbox/Checkbox'\nimport AddTask from '../../components/AddTask/AddTask'\nimport './TaskElement.scss'\n\nexport default class TaskElement extends Component{\n    maxId = 100;\n\n    state = {\n        items: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch'),\n        ]\n    }\n\n    createTodoItem(value) {\n        return {\n            value,\n            important: false,\n            done: false,\n            id: this.maxId++\n        }\n    }\n\n    deleteItem = (id) => {\n        this.setState(({ items }) => {\n            const idx = items.findIndex((el) => el.id === id);\n            const newArray = [\n                ...items.slice(0, idx),\n                ...todoData.slice(idx + 1)\n            ];\n            return {\n                todoData: newArray\n            }\n        })\n    };\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        const oldItem = arr[idx];\n        const newItem = {...oldItem,\n            [propName]: !oldItem[propName]};\n\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ];\n    }\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n        this.setState(({ items }) => {\n            const newArr = [\n                ...items,\n                newItem\n            ];\n\n            return {\n                items: newArr\n            }\n        })\n    };\n\n    onToggleImportant = (id) => {\n        this.setState(({ items }) => {\n            return {\n                items: this.toggleProperty(items, id, 'important')\n            }\n        });\n    };\n\n    render() {\n        return (\n            <div className='TaskElement'>\n                <input type='text' placeholder='Заголовок' className='h1' />\n                <input type='text' placeholder='Примечание' className='h5' />\n                {this.state.items.map((item) => {\n                    return( \n                        <Checkbox\n                            value={item.value}\n                            id={item.id}\n                            important={item.important}\n                            done={item.done}\n                            onToggleImportant={this.onToggleImportant}\n                        />\n                    )\n                })}\n                <AddTask text='Добавить новую задачу' onItemAdded={this.addItem} />\n            </div>\n        )\n    \n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}