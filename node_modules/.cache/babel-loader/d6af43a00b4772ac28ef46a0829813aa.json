{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Main/Main.js\";\n// Контейнер для отображения элементов карточек с задачами\nimport React, { useState, useEffect } from 'react';\nimport Card from '../../components/Card/Card';\nimport AddCard from '../../components/UI/AddCard/AddCard';\nimport Axios from '../../axios/axios-folders';\nimport Box from '@material-ui/core/Box';\nexport default function Main(props) {\n  const [data, setData] = useState({\n    currentCards: []\n  });\n\n  const createCard = () => {\n    return {\n      title: ''\n    };\n  };\n\n  const addCard = async () => {\n    const activeFolder = props.folderID;\n    const newCard = createCard();\n    await Axios.post(`/folders/${activeFolder}/cards.json`, newCard).then(function (res) {\n      const cardKey = Object.values(res.data)[0];\n      newCard.key = cardKey;\n      Axios.patch(`/folders/${activeFolder}/cards/${cardKey}.json`, {\n        'key': cardKey\n      });\n    });\n    setData(({\n      currentCards\n    }) => {\n      const newArr = [...currentCards, newCard];\n      return {\n        currentCards: newArr\n      };\n    });\n  };\n\n  const onDeleteCard = cardID => {\n    const idx = data.currentCards.findIndex(el => el.key === cardID);\n    const activeFolderKey = props.folderID;\n    Axios.delete(`/folders/${activeFolderKey}/cards/${cardID}.json`);\n    setData(({\n      currentCards\n    }) => {\n      const newArr = [...currentCards.slice(0, idx), ...currentCards.slice(idx + 1)];\n      return {\n        currentCards: newArr\n      };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const activeFolder = props.folderID;\n        const responseCards = await Axios.get(`/folders/${activeFolder}/cards.json`);\n        const currentCards = [];\n        Object.values(responseCards.data).forEach(card => {\n          currentCards.push(card);\n        });\n        setData({\n          currentCards\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    p: 1,\n    overflow: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, data.currentCards.map(card => {\n    return /*#__PURE__*/React.createElement(Box, {\n      p: 1,\n      minWidth: \"23%\",\n      maxWidth: \"23%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      key: card.key,\n      cardID: card.key,\n      activeFolderKey: props.folderID,\n      title: card.title,\n      onDeleteCard: onDeleteCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 1,\n    minWidth: \"23%\",\n    maxWidth: \"23%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddCard, {\n    addCard: addCard,\n    style: {\n      minHeight: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Main/Main.js"],"names":["React","useState","useEffect","Card","AddCard","Axios","Box","Main","props","data","setData","currentCards","createCard","title","addCard","activeFolder","folderID","newCard","post","then","res","cardKey","Object","values","key","patch","newArr","onDeleteCard","cardID","idx","findIndex","el","activeFolderKey","delete","slice","fetchData","responseCards","get","forEach","card","push","e","console","log","map","minHeight"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAElC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAAEU,IAAAA,YAAY,EAAE;AAAhB,GAAD,CAAhC;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,WAAO;AACLC,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD,GAJD;;AAMA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,YAAY,GAAGP,KAAK,CAACQ,QAA3B;AACA,UAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,UAAMP,KAAK,CAACa,IAAN,CAAY,YAAWH,YAAa,aAApC,EAAkDE,OAAlD,EACLE,IADK,CACA,UAAUC,GAAV,EAAe;AACnB,YAAMC,OAAO,GAAKC,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACX,IAAlB,CAAD,CAA0B,CAA1B,CAAjB;AACAQ,MAAAA,OAAO,CAACO,GAAR,GAAcH,OAAd;AACAhB,MAAAA,KAAK,CAACoB,KAAN,CAAa,YAAWV,YAAa,UAASM,OAAQ,OAAtD,EAA8D;AAAC,eAAOA;AAAR,OAA9D;AACD,KALK,CAAN;AAMAX,IAAAA,OAAO,CAAC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAsB;AAC5B,YAAMe,MAAM,GAAG,CACb,GAAGf,YADU,EAEbM,OAFa,CAAf;AAIA,aAAO;AACLN,QAAAA,YAAY,EAAEe;AADT,OAAP;AAGD,KARM,CAAP;AASD,GAlBD;;AAoBA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,UAAMC,GAAG,GAAGpB,IAAI,CAACE,YAAL,CAAkBmB,SAAlB,CAA6BC,EAAD,IAAQA,EAAE,CAACP,GAAH,KAAWI,MAA/C,CAAZ;AACA,UAAMI,eAAe,GAAGxB,KAAK,CAACQ,QAA9B;AACAX,IAAAA,KAAK,CAAC4B,MAAN,CAAc,YAAWD,eAAgB,UAASJ,MAAO,OAAzD;AACAlB,IAAAA,OAAO,CAAC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAsB;AAC5B,YAAMe,MAAM,GAAG,CACb,GAAGf,YAAY,CAACuB,KAAb,CAAmB,CAAnB,EAAsBL,GAAtB,CADU,EAEb,GAAGlB,YAAY,CAACuB,KAAb,CAAmBL,GAAG,GAAG,CAAzB,CAFU,CAAf;AAIA,aAAO;AACLlB,QAAAA,YAAY,EAAEe;AADT,OAAP;AAGD,KARM,CAAP;AASD,GAbD;;AAeAxB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiC,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMpB,YAAY,GAAGP,KAAK,CAACQ,QAA3B;AACA,cAAMoB,aAAa,GAAG,MAAM/B,KAAK,CAACgC,GAAN,CAAW,YAAWtB,YAAa,aAAnC,CAA5B;AACA,cAAMJ,YAAY,GAAG,EAArB;AACAW,QAAAA,MAAM,CAACC,MAAP,CAAca,aAAa,CAAC3B,IAA5B,EAAkC6B,OAAlC,CAA2CC,IAAD,IAAU;AAClD5B,UAAAA,YAAY,CAAC6B,IAAb,CAAkBD,IAAlB;AACD,SAFD;AAGA7B,QAAAA,OAAO,CAAC;AACNC,UAAAA;AADM,SAAD,CAAP;AAGD,OAVD,CAUE,OAAO8B,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,KAdD;;AAeAN,IAAAA,SAAS;AACV,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,aAAa,EAAC,KAAlC;AAAwC,IAAA,QAAQ,EAAC,QAAjD;AAA0D,IAAA,CAAC,EAAE,CAA7D;AAAgE,IAAA,QAAQ,EAAC,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,IAAI,CAACE,YAAL,CAAkBiC,GAAlB,CAAuBL,IAAD,IAAU;AAC/B,wBACE,oBAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAW,MAAA,QAAQ,EAAC,KAApB;AAA0B,MAAA,QAAQ,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACf,GADZ;AAEE,MAAA,MAAM,EAAEe,IAAI,CAACf,GAFf;AAGE,MAAA,eAAe,EAAEhB,KAAK,CAACQ,QAHzB;AAIE,MAAA,KAAK,EAAEuB,IAAI,CAAC1B,KAJd;AAKE,MAAA,YAAY,EAAEc,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD,GAZA,CADH,eAcE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAW,IAAA,QAAQ,EAAC,KAApB;AAA0B,IAAA,QAAQ,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEb,OAAlB;AAA2B,IAAA,KAAK,EAAE;AAAE+B,MAAAA,SAAS,EAAE;AAAb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,CADF;AAoBD","sourcesContent":["// Контейнер для отображения элементов карточек с задачами\nimport React, { useState, useEffect } from 'react'\nimport Card from '../../components/Card/Card'\nimport AddCard from '../../components/UI/AddCard/AddCard'\nimport Axios from '../../axios/axios-folders'\nimport Box from '@material-ui/core/Box';\n\nexport default function Main(props) {\n\n  const [data, setData] = useState({ currentCards: [] })\n  \n  const createCard = () => {\n    return {\n      title: ''\n    }\n  }\n\n  const addCard = async () => {\n    const activeFolder = props.folderID\n    const newCard = createCard();\n    await Axios.post(`/folders/${activeFolder}/cards.json`, newCard)\n    .then(function (res) {\n      const cardKey = ((Object.values(res.data))[0])\n      newCard.key = cardKey\n      Axios.patch(`/folders/${activeFolder}/cards/${cardKey}.json`, {'key': cardKey})\n    })\n    setData(({ currentCards }) => {\n      const newArr = [\n        ...currentCards,\n        newCard\n      ];\n      return {\n        currentCards: newArr\n      }\n    })  \n  }\n\n  const onDeleteCard = (cardID) => {\n    const idx = data.currentCards.findIndex((el) => el.key === cardID)\n    const activeFolderKey = props.folderID\n    Axios.delete(`/folders/${activeFolderKey}/cards/${cardID}.json`)\n    setData(({ currentCards }) => {\n      const newArr = [\n        ...currentCards.slice(0, idx),\n        ...currentCards.slice(idx + 1)\n      ]\n      return {\n        currentCards: newArr\n      }\n    })\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {  \n        const activeFolder = props.folderID   \n        const responseCards = await Axios.get(`/folders/${activeFolder}/cards.json`)\n        const currentCards = []\n        Object.values(responseCards.data).forEach((card) => {\n          currentCards.push(card)\n        })  \n        setData({\n          currentCards\n        }) \n      } catch (e) {\n        console.log(e)\n      }\n    }\n    fetchData()\n  }, [])\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"nowrap\" p={1} overflow='scroll'>\n      {data.currentCards.map((card) => {\n        return(\n          <Box p={1} minWidth='23%' maxWidth='23%'>\n            <Card \n              key={card.key} \n              cardID={card.key}\n              activeFolderKey={props.folderID}\n              title={card.title}\n              onDeleteCard={onDeleteCard}\n            />\n          </Box>\n        )\n      })}\n      <Box p={1} minWidth='23%' maxWidth='23%'>\n        <AddCard addCard={addCard} style={{ minHeight: '100%'}} />\n      </Box>\n    </Box>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}