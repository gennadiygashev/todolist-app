{"ast":null,"code":"var _jsxFileName = \"/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js\";\n// Контейнер для панели коллекции папок\nimport React, { useState, useEffect } from 'react';\nimport Axios from '../../axios/axios-folders';\nimport MailIcon from '@material-ui/icons/Mail';\nimport AddIcon from '@material-ui/icons/Add';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core/';\nimport { Link } from 'react-router-dom';\nimport AddFolder from '../../components/UI/AddFolder/AddFolder';\nexport default function Menu() {\n  const [folders, setFolders] = useState([]);\n\n  const createFolder = name => {\n    return {\n      name\n    };\n  };\n\n  const deleteFolder = id => {\n    this.setFolders(folders => {\n      const idx = folders.findIndex(el => el.id === id);\n      const newArray = [...folders.slice(0, idx), ...folders.slice(idx + 1)];\n      return {\n        folders: newArray\n      };\n    });\n  };\n\n  const addFolder = async text => {\n    const newFolder = createFolder(text);\n    await Axios.post(`/folders.json`, newFolder).then(function (res) {\n      const folderKey = Object.values(res.data)[0];\n      newFolder.key = folderKey;\n      Axios.patch(`/folders/${folderKey}.json`, {\n        'key': folderKey\n      });\n    });\n    setFolders(folders => {\n      const newArr = [...folders, newFolder];\n      return {\n        folders: newArr\n      };\n    });\n  };\n\n  useEffect(async () => {\n    function fetchData() {}\n\n    try {\n      const responseFolders = await Axios.get('/folders.json');\n      const folders = [];\n      Object.values(responseFolders.data).forEach(folder => {\n        folders.push(folder);\n      });\n      setFolders({\n        folders\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, folders.map(item => /*#__PURE__*/React.createElement(Link, {\n    to: `/folders/${item.key}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: item.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FolderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateNewFolderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(AddFolder, {\n      text: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\",\n      onItemAdded: addFolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/gg/Documents/portfolio/proj-react/src/containers/Menu/Menu.js"],"names":["React","useState","useEffect","Axios","MailIcon","AddIcon","FolderIcon","CreateNewFolderIcon","ListItem","ListItemIcon","ListItemText","Divider","Link","AddFolder","Menu","folders","setFolders","createFolder","name","deleteFolder","id","idx","findIndex","el","newArray","slice","addFolder","text","newFolder","post","then","res","folderKey","Object","values","data","key","patch","newArr","fetchData","responseFolders","get","forEach","folder","push","e","console","log","map","item"],"mappings":"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","sourcesContent":["// Контейнер для панели коллекции папок\nimport React, { useState, useEffect } from 'react'\nimport Axios from '../../axios/axios-folders'\nimport MailIcon from '@material-ui/icons/Mail';\nimport AddIcon from '@material-ui/icons/Add';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core/'\nimport { Link } from 'react-router-dom'\nimport AddFolder from '../../components/UI/AddFolder/AddFolder'\n\n\n\nexport default function Menu() {\n  \n  const [folders, setFolders] = useState([])\n\n  const createFolder = (name) => {\n    return {\n      name\n    }\n  }\n\n  const deleteFolder = (id) => {\n    this.setFolders((folders) => {\n      const idx = folders.findIndex((el) => el.id === id);\n      const newArray = [\n        ...folders.slice(0, idx),\n        ...folders.slice(idx + 1)\n      ]\n      return {\n        folders: newArray\n      }\n    })\n  }\n\n  const addFolder = async (text) => {\n    const newFolder = createFolder(text);\n    await Axios.post(`/folders.json`, newFolder)\n    .then(function (res) {\n      const folderKey = ((Object.values(res.data))[0])\n      newFolder.key = folderKey\n      Axios.patch(`/folders/${folderKey}.json`, {'key': folderKey})\n    })\n    setFolders((folders) => {\n      const newArr = [\n        ...folders,\n        newFolder\n      ];\n      return {\n        folders: newArr\n      }\n    })\n  }\n\n  useEffect(async () => {\n    function fetchData() {\n      \n    }\n    try {      \n      const responseFolders = await Axios.get('/folders.json')\n      const folders = []\n      Object.values(responseFolders.data).forEach((folder) => {\n        folders.push(folder)\n      })  \n      setFolders({\n        folders\n      }) \n    } catch (e) {\n      console.log(e)\n    }\n  })\n\n\n  return(\n    <>\n      {folders.map((item) => (\n        <Link to={`/folders/${item.key}`}>\n          <ListItem button key={item.key}>\n            <ListItemIcon><FolderIcon /></ListItemIcon>\n            <ListItemText primary={item.name} />\n          </ListItem>\n        </Link>\n      ))}\n      <Divider />\n      <ListItem>\n        <ListItemIcon><CreateNewFolderIcon /></ListItemIcon>\n        <ListItemText primary={\n          <AddFolder \n            text='Новая папка' \n            onItemAdded={addFolder}\n          />       \n        }/>\n      </ListItem>\n    </>\n  )    \n  \n}\n\n"]},"metadata":{},"sourceType":"module"}